{"version":3,"sources":["../../src/pages/recipe/recipe-new/recipe-new.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/pages/recipe/recipe-new/recipe-new.page.ts","../../src/model/backend/recipe/recipe.ts"],"names":[],"mappings":"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","file":"14.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { SimpleAppHeaderModule } from '../../../components/simple-app-header/simple-app-header.module';\r\nimport { RecipeNewPage } from './recipe-new.page';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipeNewPage\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RecipeNewPage),\r\n    SimpleAppHeaderModule\r\n  ],\r\n  exports: [\r\n    RecipeNewPage\r\n  ]\r\n})\r\nexport class RecipeNewPageModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-new/recipe-new.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\r\n\r\n/**\r\n * Enum which defines possible header colors.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_COLORS {\r\n    BASE = \"dark\",\r\n}\r\n\r\nexport class HeaderModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    pageTitle: string;\r\n\r\n    /**\r\n     * Navigation bar color.\r\n     * \r\n     * @type {string}\r\n     * @memberof HeaderModel\r\n     */\r\n    navbarColor: string;\r\n\r\n    /**\r\n     * Boolean condition to hide default back button or not to hide.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof HeaderModel\r\n     */\r\n    hideDefaultBackBtn: boolean;\r\n\r\n    /**\r\n     * Left button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    leftButton: ButtonModel;\r\n\r\n    /**\r\n     * Right button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    rightButton: ButtonModel;\r\n\r\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\r\n        this.pageTitle = pageTitle;\r\n        if (navbarColor) {\r\n            this.navbarColor = navbarColor;\r\n        }\r\n        if (hideDefaultBackBtn != undefined) {\r\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\r\n        }\r\n        if (leftButton) {\r\n            this.leftButton = leftButton;\r\n        }\r\n        if (rightButton) {\r\n            this.rightButton = rightButton;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ViewController } from 'ionic-angular';\r\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\r\n\r\n/**\r\n * Header button types.\r\n * \r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_BUTTON_TYPE {\r\n  BACK = <any>\"back\",\r\n  MENU_TOGGLE = <any>\"menuToggle\",\r\n  SAVE = <any>\"save\",\r\n  SEARCH = <any>\"search\",\r\n  CLOSE = <any>\"close\"\r\n}\r\n\r\n/**\r\n * Simple application header component\r\n *\r\n * @export\r\n * @class SimpleAppHeaderComponent\r\n */\r\n@Component({\r\n  selector: \"simple-app-header\",\r\n  templateUrl: \"simple-app-header.component.html\"\r\n})\r\nexport class SimpleAppHeaderComponent {\r\n\r\n  /**\r\n   * Header object model\r\n   * \r\n   * @type {HeaderModel}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Input('header') header: HeaderModel;\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit search input value on change.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit close button click.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Reference to search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @ViewChild(\"searchInput\") searchInput;\r\n\r\n  /**\r\n   * Boolean condition to show search input.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  showSearch: boolean = false;\r\n\r\n  /**\r\n   * Search input\r\n   * \r\n   * @type {string}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  search: string = \"\";\r\n\r\n  public headerButtonType = HEADER_BUTTON_TYPE;\r\n\r\n\r\n  constructor(public viewCtrl: ViewController) {\r\n  }\r\n\r\n  /**\r\n   * Method to handle back button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onBackButtonClick() {\r\n    this.onBackBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle save button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onSaveButtonClick() {\r\n    this.onSaveBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle close button click.\r\n   *\r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onCloseButtonClick() {\r\n    this.onCloseBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Toggle search input to show or hide.\r\n   *\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  public toggleSearch(): void {\r\n    this.showSearch = !this.showSearch;\r\n    if (!this.showSearch) {\r\n      this.clearSearch(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to emit typed value in search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public searchType(): void {\r\n    this.searchChange.emit(this.search);\r\n  }\r\n\r\n  /**\r\n   * Method to clear search and if param is true then focus the input\r\n   *\r\n   * @param {boolean} focus - param to know if input needs to be focused\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public clearSearch(focus: boolean) {\r\n    this.search = \"\";\r\n    this.searchType();\r\n    if (focus) {\r\n      this.searchInput.setFocus();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { IonicModule } from \"ionic-angular\";\r\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SimpleAppHeaderComponent\r\n  ],\r\n  imports: [\r\n    IonicModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    SimpleAppHeaderComponent\r\n  ]\r\n})\r\nexport class SimpleAppHeaderModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","import { Component, Inject } from '@angular/core';\r\nimport { IonicPage, ViewController, ModalController, Events, NavController, NavParams } from 'ionic-angular';\r\nimport { HeaderModel, HEADER_COLORS } from '../../../model/frontend/common/HeaderModel';\r\nimport { ToastProvider } from '../../../providers/tehnical/toast/toast.provider';\r\nimport { GlobalUtils } from '../../../utils/global-utils';\r\nimport { StorageProvider } from '../../../providers/tehnical/storage/storage.provider';\r\nimport { Recipe } from '../../../model/backend/recipe/recipe';\r\nimport { ProductProvider } from '../../../providers/product/product.provider';\r\nimport { MyProduct } from '../../../model/backend/product/my-product';\r\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../../app/app.config';\r\nimport { RecipeProduct } from '../../../model/frontend/product/recipe-product';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'recipe-new',\r\n  templateUrl: 'recipe-new.page.html'\r\n})\r\nexport class RecipeNewPage {\r\n\r\n  /**\r\n   * Header model\r\n   *\r\n   * @type {HeaderModel}\r\n   * @memberof RecipeNewPage\r\n   */\r\n  public headerModel: HeaderModel;\r\n\r\n  /**\r\n   * New recipe object.\r\n   *\r\n   * @type {Recipe}\r\n   * @memberof RecipeNewPage\r\n   */\r\n  public recipe: Recipe;\r\n\r\n  /**\r\n   * Label of the ingredients\r\n   *\r\n   * @type {string}\r\n   * @memberof RecipeNewPage\r\n   */\r\n  // public ingredientsLabel: string = \"\";\r\n\r\n\r\n  constructor(private toast: ToastProvider, public viewCtrl: ViewController, private navCtrl: NavController, private storage: StorageProvider,\r\n    public productProvider: ProductProvider, private modalCtrl: ModalController, private event: Events, @Inject(APP_CONFIG_TOKEN) private config: AppConfig,\r\n    private navParams: NavParams) {\r\n    if (GlobalUtils.isUndefinedOrNull(navParams.get(\"recipe\"))) {\r\n      this.headerModel = new HeaderModel(\"New recipe\", HEADER_COLORS.BASE);\r\n      this.recipe = new Recipe(undefined,\"\", [], \"\", [], this.storage.getLoggedUser());\r\n    } else {\r\n      this.headerModel = new HeaderModel(\"Edit recipe\", HEADER_COLORS.BASE);\r\n      this.recipe = navParams.get(\"recipe\");\r\n      // this.setIngredientsLabel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to dismiss modal.\r\n   *\r\n   * @memberof GroceryNewPage\r\n   */\r\n  public dismissModal() {\r\n    this.viewCtrl.dismiss();\r\n  }\r\n\r\n  /**\r\n   * Method to load ingredients select popup.\r\n   *\r\n   * @memberof RecipeNewPage\r\n   */\r\n  public loadIngredientsSelect() {\r\n    let modal = this.modalCtrl.create('RecipeProductPage', { \"products\": this.recipe.products });\r\n    modal.present();\r\n    modal.onDidDismiss((result: RecipeProduct[]) => {\r\n      if (!GlobalUtils.isUndefinedOrNull(result)) {\r\n        if (result.length > 0) {\r\n          this.recipe.products = [];\r\n          result.forEach(product => {\r\n            //TODO - correct his\r\n            // if (product.checked) {\r\n              this.recipe.products.push(product.myProduct);\r\n            // }\r\n            //  else {\r\n            //   this.recipe.products = this.recipe.products.filter(obj => obj.product.name != product.myProduct.product.name);\r\n            // }\r\n          })\r\n          // this.setIngredientsLabel();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create new recipe.\r\n   *\r\n   * @memberof RecipeNewPage\r\n   */\r\n  public editRecipe() {\r\n    if (GlobalUtils.isEmpty(this.recipe.name)) {\r\n      this.toast.showErrorMessage(\"Recipe title cannot be empty!\")\r\n    } else if (this.recipe.products.length == 0) {\r\n      this.toast.showErrorMessage(\"Recipe needs to have ingredients!\")\r\n    } else {\r\n      if (GlobalUtils.isUndefinedOrNull(this.recipe.id)) {\r\n        this.event.publish(this.config.newRecipeCreated, this.recipe);\r\n      } else {\r\n        this.event.publish(this.config.recipeEdited, this.recipe);\r\n      }\r\n      this.navCtrl.pop();\r\n    }\r\n  }\r\n\r\n  // /**\r\n  //  * Method to set ingredients label.\r\n  //  *\r\n  //  * @memberof RecipeNewPage\r\n  //  */\r\n  // public setIngredientsLabel() {\r\n  //   this.ingredientsLabel = \"\";\r\n  //   for (let i = 0; i < this.recipe.products.length; i++) {\r\n  //     this.ingredientsLabel += this.recipe.products[i].product.name;\r\n  //     if (i != this.recipe.products.length - 1) {\r\n  //       this.ingredientsLabel += \",\";\r\n  //     }\r\n  //   }\r\n  // }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-new/recipe-new.page.ts","import { RecipeNote } from \"./recipe-note\";\r\nimport { GlobalUtils } from \"../../../utils/global-utils\";\r\nimport { MyProduct } from \"../product/my-product\";\r\nimport { User } from \"../user/user\";\r\n\r\n/**\r\n * Recipe class\r\n *\r\n * @export\r\n * @class Recipe\r\n */\r\nexport class Recipe {\r\n\r\n    /**\r\n     * Id of the recipe.\r\n     *\r\n     * @type {number}\r\n     * @memberof Recipe\r\n     */\r\n    public id: number;\r\n\r\n    /**\r\n     * Name of the recipe.\r\n     *\r\n     * @type {string}\r\n     * @memberof Recipe\r\n     */\r\n    public name: string;\r\n\r\n    // /**\r\n    //  * Key of the recipe.\r\n    //  *\r\n    //  * @type {number}\r\n    //  * @memberof Recipe\r\n    //  */\r\n    // public key: string;\r\n\r\n    /**\r\n * Description of the recipe\r\n *\r\n * @type {string}\r\n * @memberof Recipe\r\n */\r\n    public description: string;\r\n\r\n    /**\r\n     * Id of the user to whom belong the recipe.\r\n     *\r\n     * @type {User}\r\n     * @memberof Recipe\r\n     */\r\n    public user: User;\r\n\r\n\r\n    /**\r\n     * Products needed in the recipe.\r\n     *\r\n     * @type {Product[]}\r\n     * @memberof Recipe\r\n     */\r\n    public products: MyProduct[];\r\n\r\n\r\n\r\n    /**\r\n     * Recipe notes.\r\n     *\r\n     * @type {RecipeNote}\r\n     * @memberof Recipe\r\n     */\r\n    public notes: RecipeNote[];\r\n\r\n\r\n    constructor(id: number, name: string, products: MyProduct[], description: string, notes: RecipeNote[], user: User) {\r\n        this.id = id;\r\n        this.name = name;\r\n        // this.key = key;\r\n        this.products = products;\r\n        this.description = description;\r\n        this.notes = GlobalUtils.isArrayNotNull(notes);\r\n        this.user = user;\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/recipe/recipe.ts"],"sourceRoot":""}