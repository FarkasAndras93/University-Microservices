{"version":3,"sources":["../../src/utils/global-utils.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/tehnical/toast/toast.provider.ts","../../src/providers/user/user.provider.ts","../../src/providers/message/message.provider.ts","../../src/model/backend/user/user.ts","../../src/app/app.component.ts","../../src/model/backend/message/message.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.config.ts","../../src/providers/tehnical/storage/storage.provider.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { DatePipe } from \"@angular/common\";\r\n\r\n/**\r\n * Global Utils, contains util method for the whole aplication.\r\n *\r\n * @export\r\n * @class GlobalUtils\r\n */\r\nexport class GlobalUtils {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public static isEmptyObject(obj: any): boolean {\r\n    return Object.keys(obj).length === 0;\r\n  }\r\n\r\n  /**\r\n   * Checks if value is undefined or null\r\n   *\r\n   * @static\r\n   * @param {any} val\r\n   * @returns true if value is undefined or null, otherwise false\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static isUndefinedOrNull(value: any): boolean {\r\n    return value === undefined || value === null;\r\n  }\r\n\r\n  /**\r\n   * Checks if string value is undefined or null or empty\r\n   *\r\n   * @static\r\n   * @param {string} val\r\n   * @returns true if value is undefined or null or empty, otherwise false\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static isEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given array has all the values equals to 0\r\n   *\r\n   * @static\r\n   * @param {any[]} array\r\n   * @returns {boolean}\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static isArrayFilledWithValue(array: any[], ...targetValue): boolean {\r\n    return array.every(function (value) {\r\n      return (typeof targetValue === \"number\" || typeof targetValue === \"string\"\r\n        ? targetValue == Number(value)\r\n        : typeof targetValue === \"object\" ? targetValue.indexOf(value) != -1\r\n          : targetValue == value\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Search in map by value and retrun key.\r\n   *\r\n   * @static\r\n   * @param {Map<any, any>} map\r\n   * @param {*} value\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static getMapKeyByValue(map: Map<any, any>, value: any) {\r\n    let key = null;\r\n    map.forEach((entryVal, entryKey) => {\r\n      if (entryVal == value) {\r\n        key = entryKey;\r\n      }\r\n    })\r\n    return key;\r\n  }\r\n\r\n  /**\r\n   * Method to use async/await with forEach. If this function is used for iteration and there are promises with await inside of iteration then promises are executed\r\n   * first. After the await methods are executed inside of the forEach the execution continues with next lines outside of the forEach.\r\n   *\r\n   * @static\r\n   * @param {any} array\r\n   * @param {any} callback\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static async asyncForEach(array, callback) {\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to get parameter value from url.\r\n   *\r\n   * @static\r\n   * @param {*} parameterName\r\n   * @returns\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static getUrlParameter(parameterName) {\r\n    var result = null, tmp = [];\r\n    location.search.substr(1).split(\"&\").forEach(function (item) {\r\n      tmp = item.split(\"=\");\r\n      if (tmp[0] === parameterName) {\r\n        result = decodeURIComponent(tmp[1])\r\n      };\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Generate a random string with the given length.\r\n   * @param len\r\n   */\r\n  public static generateRandomString(len: number): string {\r\n    let outStr: string = \"\", newStr;\r\n    while (outStr.length < len) {\r\n      newStr = Math.random().toString(36).slice(2);\r\n      outStr += newStr.slice(0, Math.min(newStr.length, (len - outStr.length)));\r\n    }\r\n    return outStr.toUpperCase();\r\n  }\r\n  /**\r\n   * Return object if it is not null or a new empty array if it is\r\n   *\r\n   * @param object\r\n   */\r\n  public static isArrayNotNull(object: any): any[] {\r\n    return object != undefined && object != null ? object : [];\r\n  }\r\n\r\n  /**\r\n   * UUID Generator\r\n   *\r\n   * @private\r\n   * @returns\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static getUUID() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n      s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  /**\r\n   * Method to convert html text to normal text. Replace specifig html tags and decode.\r\n   *\r\n   * @static\r\n   * @param {*} text\r\n   * @returns\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static htmlToNormalText(text) {\r\n    var parser = new DOMParser;\r\n    var dom = parser.parseFromString(\r\n      '<!doctype html><body>' + text,\r\n      'text/html');\r\n    var decodedString = dom.body.textContent;\r\n    return text ? decodedString : '';\r\n  }\r\n  /**\r\n   * Method to create a JID for XMPP usage.\r\n   * @param tenant\r\n   * @param username\r\n   */\r\n  public static createJidForUser(tenant: string, username: string): string {\r\n    // create a valid JID for xmpp login from the username and tenant.\r\n    let jid: string;\r\n    jid = tenant + '_' + username.toLowerCase().replace(/ /g, '') + '@communication.awinta.net';\r\n    return jid;\r\n  }\r\n\r\n  /**\r\n   * Method to get color for string.\r\n   *\r\n   * @static\r\n   * @param {*} str\r\n   * @returns\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static stringToColour(str) {\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = '#';\r\n    for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n    }\r\n    return colour;\r\n  }\r\n\r\n  /**\r\n   * Method to get random numbers between min and max value.\r\n   *\r\n   * @static\r\n   * @param {number} min\r\n   * @param {number} max\r\n   * @returns\r\n   * @memberof GlobalUtils\r\n   */\r\n  public static getRandomNumberBetween(min: number, max: number) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  public static convertProductObjectToList(products){\r\n    return Object.keys(products).map(i => products[i]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/global-utils.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 120;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 120\n// module chunks = 4","var map = {\n\t\"../pages/contact/contact.page.module\": [\n\t\t308,\n\t\t2\n\t],\n\t\"../pages/login/login.page.module\": [\n\t\t309,\n\t\t1\n\t],\n\t\"../pages/messages/messages.page.module\": [\n\t\t310,\n\t\t0\n\t],\n\t\"../pages/register/register.page.module\": [\n\t\t311,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 165;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 165\n// module chunks = 4","import { Injectable } from '@angular/core';\r\nimport { ToastController } from 'ionic-angular'\r\nimport { GlobalUtils } from '../../../utils/global-utils';\r\n\r\n\r\n/**\r\n * ToastProvider\r\n *\r\n * Shows toast information on the syste\r\n *\r\n * @export\r\n * @class ToastProvider\r\n */\r\n@Injectable()\r\nexport class ToastProvider {\r\n\r\n  /**\r\n   * Creates an instance of ToastProvider.\r\n   *\r\n   * @param {ToastController} toastCtrl\r\n   *\r\n   * @memberOf ToastProvider\r\n   */\r\n  constructor(private toastCtrl: ToastController) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Shows an error message, which disappears automatically \r\n   *\r\n   * @param {string} message message to show\r\n   *\r\n   * @memberOf ToastProvider\r\n   */\r\n  showErrorMessage(message: string, duration?: number, dismissOnPageChange?: boolean) {\r\n    duration = duration ? duration : message.length < 50 ? 3000 : message.length > 100 ? 5000 : 4000;\r\n    let toast = this.toastCtrl.create({\r\n      message: message,\r\n      duration: duration,\r\n      position: 'middle',\r\n      dismissOnPageChange: GlobalUtils.isUndefinedOrNull(dismissOnPageChange) ? true : dismissOnPageChange,\r\n      cssClass: 'error-toast'\r\n    });\r\n\r\n    toast.onDidDismiss(() => {\r\n      console.log('Dismissed toast');\r\n    });\r\n\r\n    toast.present();\r\n  }\r\n\r\n  /**\r\n   * Shows a success message, which disappears automatically\r\n   * @param message message\r\n   */\r\n  showSuccessMessage(message: string, duration?: number, dismissOnPageChange? :boolean): Promise<any> {\r\n    duration = duration ? duration : message.length < 50 ? 3000 : message.length > 100 ? 5000 : 4000;\r\n    let toast = this.toastCtrl.create({\r\n      message: message,\r\n      duration: duration,\r\n      position: 'middle',\r\n      dismissOnPageChange: dismissOnPageChange,\r\n      cssClass: 'success-toast'\r\n    });\r\n\r\n    let p = new Promise((resolve, reject) => {\r\n\r\n      toast.onDidDismiss(() => {\r\n        console.log('Dismissed toast');\r\n        resolve();\r\n      });\r\n    });\r\n    toast.present();\r\n    return p;\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tehnical/toast/toast.provider.ts","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { GlobalUtils } from '../../utils/global-utils';\r\nimport { User } from '../../model/backend/user/user';\r\nimport { Events } from 'ionic-angular';\r\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../app/app.config';\r\nimport { StorageProvider } from '../tehnical/storage/storage.provider';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\nexport enum ACCESS_TOKEN_KEYS {\r\n  USER_ID = \"userId\",\r\n  EXPIRATION_TIME = \"exp\"\r\n}\r\n\r\n@Injectable()\r\nexport class UserProvider {\r\n\r\n  private refreshUpdateStarted: boolean = false;\r\n\r\n  private _accessToken: string;\r\n\r\n  private refreshTokenUpdater;\r\n\r\n  constructor(public http: HttpClient, private event: Events, @Inject(APP_CONFIG_TOKEN) private config: AppConfig,\r\n    private storage: StorageProvider) {\r\n    console.log('Hello RestProvider Provider');\r\n  }\r\n\r\n  //TODO - encode in md5 the password\r\n  login(username: string, password: string): Promise<any> {\r\n    // let hash = Md5.hashStr(\"password\");\r\n    // this.event.publish(this.config.loginConfig.loggedInCompleteEventKey);\r\n    // this.event.publish(this.config.loginConfig.updatedTokensAvailableEventKey, { accessToken: \"asd\" });\r\n    // return Promise.resolve(new User(\"Name1\", \"Username2\", \"\"));\r\n\r\n    return new Promise((resolve, reject) => {\r\n      let headers = new HttpHeaders();\r\n      headers.append('Content-Type', 'application/json');\r\n\r\n      this.http.post(this.config.basePath2 + \"/login\",\r\n        { \"username\": username, \"password\": password }, { headers: headers }\r\n      ).subscribe((token: any) => {\r\n           this._accessToken = token.accessToken;\r\n        this.event.publish(this.config.loginConfig.loggedInCompleteEventKey);\r\n        this.event.publish(this.config.loginConfig.updatedTokensAvailableEventKey, token);\r\n        this.storage.saveLocal(this.config.loginConfig.hasLoggedIn, true);\r\n        // this.storage.saveLocal(this.config.loginConfig.loggedInUser, loggedUser);\r\n        return resolve(token);\r\n      }, error => {\r\n        console.error(\"Error while loggin in application\", error);\r\n        return reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO - encode in md5 the password\r\n  register(name: string, username: string, password: string): Promise<User> {\r\n    let hash = Md5.hashStr(\"password\");\r\n    return Promise.resolve(new User(\"Name1\", \"Username1\", hash.toString()));\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    //   let headers = new HttpHeaders();\r\n    //   headers.append('Content-Type', 'application/json');\r\n\r\n    //   this.http.put(this.config.basePath2 + \"/register\",\r\n    //     { \"name\": name, \"username\": username, \"password\": hash }, { headers: headers }\r\n    //   ).subscribe((loggedUser: any) => {\r\n    //     this.event.publish(this.config.loginConfig.loggedInCompleteEventKey);\r\n    //     this.storage.saveLocal(this.config.loginConfig.hasLoggedIn, true);\r\n    //     this.storage.saveLocal(this.config.loginConfig.loggedInUser, loggedUser);\r\n    //     return resolve(loggedUser);\r\n    //   }, error => {\r\n    //     console.error(\"Error while loggin in application\", error);\r\n    //     return reject(error);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  /**\r\n * Method to return messages for logged user.\r\n * @returns {Promise<MyProduct[]>}\r\n * @memberof ProductProvider\r\n */\r\n  async getAllUsers(): Promise<any> {\r\n    let users: User[] = [];\r\n    users.push(new User(\"Name1\", undefined, undefined));\r\n    users.push(new User(\"Name2\", undefined, undefined));\r\n    users.push(new User(\"Name3\", undefined, undefined));\r\n    users.push(new User(\"Name4\", undefined, undefined));\r\n    users.push(new User(\"Name5\", undefined, undefined));\r\n    users[0].id = \"1\";\r\n    users[1].id = \"2\";\r\n    users[2].id = \"3\";\r\n    users[3].id = \"4\";\r\n    users[4].id = \"5\";\r\n    return Promise.resolve(users);\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    //   let headers = new HttpHeaders();\r\n    //   headers.append('Content-Type', 'application/json');\r\n\r\n    //   this.http.get(this.config.basePath2 + \"/users/get\", { headers: headers }).subscribe((messages: MessageModel[]) => {\r\n    //     return resolve(messages);\r\n    //   }, error => {\r\n    //     console.error(\"Error while getting my messages\", error);\r\n    //     return reject(error);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Performs an auto login\r\n   *\r\n   * @returns {Promise<boolean>} Token response\r\n   * @memberof LoginProvider\r\n   */\r\n  public async autoLogin(): Promise<boolean> {\r\n    this.event.publish(this.config.loginConfig.loggedInCompleteEventKey);\r\n    return Promise.resolve(true);\r\n\r\n    // return new Promise<boolean>((resolve, reject) => {\r\n    //   this.storage.getLocal(this.config.loginConfig.refreshToken).then(\r\n    //     token => {\r\n    //       console.log(\"refresher token stored\", token);\r\n    //       if (token != undefined && token != null && this.getValueFromToken(token, ACCESS_TOKEN_KEYS.EXPIRATION_TIME) < new Date()) {\r\n    //         console.log(\"Asking for new refresher token\");\r\n    //         let headers = new HttpHeaders();\r\n    //         headers.append('Content-Type', 'application/json');\r\n\r\n    //         this.http.post(this.config.basePath2 + \"/renew\", { \"token\": token }, { headers: headers }).subscribe((token: any) => {\r\n    //           this.storage.saveLocal(this.config.loginConfig.accessToken, token.accessToken); //lazy loaded modules can't wait till next refresh event\r\n    //           this.storage.saveLocal(this.config.loginConfig.hasLoggedIn, true);\r\n    //           this.storage.saveLocal(this.config.loginConfig.refreshToken, token.refreshToken).then(\r\n    //             () => {\r\n    //               this.event.publish(\r\n    //                 this.config.loginConfig.updatedTokensAvailableEventKey,\r\n    //                 token\r\n    //               );\r\n    //               this._accessToken = token.accessToken;\r\n    //               this.event.publish(this.config.loginConfig.loggedInCompleteEventKey);\r\n    //               this.refreshTokenBeforeExpire(token.accessToken);\r\n    //               resolve(true);\r\n    //             },\r\n    //             () => {\r\n    //               resolve(true);\r\n    //             }\r\n    //           );\r\n    //         },\r\n    //           () => {\r\n    //             reject();\r\n    //           }\r\n    //         );\r\n    //       } else {\r\n    //         reject();\r\n    //       }\r\n    //     },\r\n    //     () => {\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Method to get values from access token based on parameter value\r\n   *\r\n   * @param {ACCESS_TOKEN_KEYS} key - property of access token\r\n   * @returns {*}\r\n   * @memberof LoginProvider\r\n   */\r\n  private getValueFromAccessToken(key: ACCESS_TOKEN_KEYS): any {\r\n    if (!this._accessToken) {\r\n      return null;\r\n    }\r\n\r\n    let helper: JwtHelperService = new JwtHelperService();\r\n    let payload = helper.decodeToken(this._accessToken);\r\n    return payload[key];\r\n  }\r\n\r\n  /**\r\n * Method to get values from access token based on parameter value\r\n *\r\n * @param {ACCESS_TOKEN_KEYS} key - property of access token\r\n * @returns {*}\r\n * @memberof LoginProvider\r\n */\r\n  private getValueFromToken(token: string, key: ACCESS_TOKEN_KEYS): any {\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    let helper: JwtHelperService = new JwtHelperService();\r\n    let payload = helper.decodeToken(token);\r\n    return payload[key];\r\n  }\r\n\r\n  private refreshTokenBeforeExpire(token) {\r\n    let jwtHelper: JwtHelperService = new JwtHelperService();\r\n    let expTime = jwtHelper.getTokenExpirationDate(token);\r\n    let diff = expTime.getTime() - new Date().getTime() - 60 * 1000;\r\n    console.log(\"Refresh starts in \", diff);\r\n    if (!this.refreshUpdateStarted) {\r\n      this.refreshUpdateStarted = true;\r\n      this.refreshTokenUpdater = setTimeout(() => {\r\n        this.refreshUpdateStarted = false;\r\n        this.autoLogin();\r\n      }, diff);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.provider.ts","import { User } from './../../model/backend/user/user';\r\nimport { MessageModel } from './../../model/backend/message/message';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageProvider } from '../tehnical/storage/storage.provider';\r\n// import { GroceryList } from '../../model/backend/grocery-list/message';\r\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../app/app.config';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\n\r\n@Injectable()\r\nexport class MessageProvider {\r\n\r\n  constructor(public http: HttpClient, private storage: StorageProvider, @Inject(APP_CONFIG_TOKEN) private config: AppConfig) {\r\n  }\r\n\r\n  /**\r\n   * Method to return messages for logged user.\r\n   * @returns {Promise<MyProduct[]>}\r\n   * @memberof ProductProvider\r\n   */\r\n  async getMessagesForUser(): Promise<any> {\r\n    let messages: MessageModel[] = [];\r\n    messages.push(new MessageModel(\"Name1\", \"Phone1\", \"Subject1\", \"Message1 Message1 Message1Message1Message1Message1 Message1Message1Message1Message1\", \"Email1\", \"1\"));\r\n    messages.push(new MessageModel(\"Name2\", \"Phone2\", \"Subject2\", \"Message2\", \"Email2\", \"1\"));\r\n    messages.push(new MessageModel(\"Name3\", \"Phone3\", \"Subject3\", \"Message3\", \"Email3\", \"1\"));\r\n    messages.push(new MessageModel(\"Name4\", \"Phone4\", \"Subject4\", \"Message4\", \"Email4\", \"1\"));\r\n    messages.push(new MessageModel(\"Name5\", \"Phone5\", \"Subject5\", \"Message5\", \"Email5\", \"1\"));\r\n    return Promise.resolve(messages);\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    //   let headers = new HttpHeaders();\r\n    //   headers.append('Content-Type', 'application/json');\r\n\r\n    //   this.http.get(this.config.basePath + \"/messages/get/\" + this.storage.getLoggedUser().id, { headers: headers }).subscribe((messages: MessageModel[]) => {\r\n    //     return resolve(messages);\r\n    //   }, error => {\r\n    //     console.error(\"Error while getting my messages\", error);\r\n    //     return reject(error);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * Method to creamte message for user.\r\n   *\r\n   * @param {number} userId\r\n   * @param {MyProduct} product\r\n   * @memberof ProductProvider\r\n   */\r\n  createMessage(message: MessageModel): Promise<MessageModel> {\r\n    message.id = \"1\";\r\n    return Promise.resolve(message);\r\n\r\n    // return new Promise((resolve, reject) => {\r\n    //   let headers = new HttpHeaders();\r\n    //   headers.append('Content-Type', 'application/json');\r\n\r\n    //   this.http.put(this.config.basePath + \"/message/add\", message).subscribe((message: MessageModel) => {\r\n    //     return resolve(message);\r\n    //   }, error => {\r\n    //     console.error(\"Error while creating my product\", error);\r\n    //     return reject(error);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/message/message.provider.ts","import { GlobalUtils } from \"../../../utils/global-utils\";\r\n\r\nexport class User {\r\n\r\n    /**\r\n     * Id of the user.\r\n     *\r\n     * @type {string}\r\n     * @memberof User\r\n     */\r\n    public id: string;\r\n\r\n    /**\r\n     * Name of the firma.\r\n     *\r\n     * @type {string}\r\n     * @memberof User\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * User name.\r\n     *\r\n     * @type {string}\r\n     * @memberof User\r\n     */\r\n    public username: string;\r\n\r\n    /**\r\n     * Password of the user.\r\n     *\r\n     * @type {string}\r\n     * @memberof User\r\n     */\r\n    public password: string;\r\n\r\n    \r\n    constructor(name: string, username: string, password: string) {\r\n        this.name = name;\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/user/user.ts","import { LanguageModel } from './../model/frontend/common/LanguageModel';\r\nimport { Component, ViewChild, Inject } from '@angular/core';\r\nimport { Platform, Nav, Events } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { APP_CONFIG_TOKEN, AppConfig } from './app.config';\r\nimport { StorageProvider } from '../providers/tehnical/storage/storage.provider';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n/**\r\n * Side Menu Type\r\n */\r\ntype SideMenuItem = { title: MENU_TITLE, component: any, icon?: string, badgeRight?: boolean, badgeValue?: number, badgeColor?: string };\r\n\r\n/**\r\n * Enums for menu titles.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum MENU_TITLE {\r\n  LOGIN = \"LOGIN\",\r\n  HOME = \"HOME\",\r\n  BOOK_A_TIME = \"BOOK_A_TIME\",\r\n  BOOKED_TIMES = \"BOOKED_TIMES\",\r\n  ABOUT_US = \"ABOUT_US\",\r\n  CONTACT = \"CONTACT\",\r\n  MESSAGES = \"MESSAGES\",\r\n  LOGOUT = \"LOGOUT\"\r\n}\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n\r\n  /**\r\n   * Navigation\r\n   *\r\n   *\r\n   * @type {Nav}\r\n   * @memberof MyApp\r\n   */\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  /**\r\n   * Root page\r\n   *\r\n   * @type {*}\r\n   * @memberof MyApp\r\n   */\r\n  rootPage: any = 'LoginPage';\r\n\r\n  /**\r\n  * List of pages in logged in state\r\n  *\r\n  * @private\r\n  * @type {Array<SideMenuItem>}\r\n  * @memberof MyApp\r\n  */\r\n  private userPages: Array<SideMenuItem> = [\r\n    { title: MENU_TITLE.LOGIN, component: 'LoginPage', icon: 'log-in' },\r\n    { title: MENU_TITLE.CONTACT, component: 'ContactPage', icon: 'phone-portrait' }\r\n  ]\r\n\r\n  /**\r\n    * List of pages in logged in state\r\n    *\r\n    * @private\r\n    * @type {Array<SideMenuItem>}\r\n    * @memberof MyApp\r\n    */\r\n  private adminPages: Array<SideMenuItem> = [\r\n    { title: MENU_TITLE.LOGOUT, component: 'LoginPage', icon: 'log-out' }\r\n  ]\r\n\r\n\r\n  /**\r\n   * Current pages in the side menu\r\n   *\r\n   * @type {Array<SideMenuItem>}\r\n   * @memberof MyApp\r\n   */\r\n  pages: Array<SideMenuItem>;\r\n\r\n  /**\r\n   * Possible languages to select.\r\n   *\r\n   * @type {[LanguageModel]}\r\n   * @memberof MyApp\r\n   */\r\n  public languages: LanguageModel[] = [];\r\n\r\n  /**\r\n   * Selected language.\r\n   *\r\n   * @type {LanguageModel}\r\n   * @memberof MyApp\r\n   */\r\n  public selectedLanguage: LanguageModel;\r\n\r\n  /**\r\n   * State of pharmacy select dropdown.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MyApp\r\n   */\r\n  public dropdownOpened:  boolean = false;\r\n\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, private event: Events,\r\n    @Inject(APP_CONFIG_TOKEN) private config: AppConfig, private storage: StorageProvider,\r\n    private translate: TranslateService) {\r\n\r\n    translate.setDefaultLang('en');\r\n    this.selectedLanguage = { key: 'en', name: 'English' };\r\n    this.languages.push(this.selectedLanguage);\r\n\r\n    platform.ready().then(() => {\r\n      this.pages = this.userPages;\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n\r\n      //Subscribing to login and logout events\r\n      this.event.subscribe(this.config.loginConfig.logoutEventKey, this.logoutEventComplete);\r\n      this.event.subscribe(this.config.loginConfig.loggedInCompleteEventKey, this.loginEventComplete);\r\n    });\r\n  }\r\n\r\n  /**\r\n   *  Visibilitychange event is removed on destroy.\r\n   *\r\n   * @memberof ChatPage\r\n   */\r\n  ngOnDestroy() {\r\n    //Unsubscribing to login and logout events\r\n    this.event.unsubscribe(this.config.loginConfig.logoutEventKey, this.logoutEventComplete);\r\n    this.event.unsubscribe(this.config.loginConfig.loggedInCompleteEventKey, this.loginEventComplete);\r\n  }\r\n\r\n  /**\r\n   * Methods after login was completed.\r\n   *\r\n   * @private\r\n   * @memberof MyApp\r\n   */\r\n  private loginEventComplete = () => {\r\n    this.pages = this.adminPages.map(x => Object.assign({}, x));\r\n\r\n    // if (this.storage.getLoggedUser().admin) {\r\n    // this.pages.pop();\r\n    // this.pages.push(this.adminPages[0]);\r\n    // this.pages.push(this.loggedInPages[this.loggedInPages.length - 1]);\r\n    // }\r\n  }\r\n\r\n  /**\r\n   * Methods after logout was completed.\r\n   *\r\n   * @private\r\n   * @memberof MyApp\r\n   */\r\n  private logoutEventComplete = () => {\r\n    this.pages = this.userPages;\r\n    this.storage.saveLocal(this.config.loginConfig.hasLoggedIn, false);\r\n    this.storage.clearConfig(this.config.loginConfig.loggedInUser);\r\n  }\r\n\r\n  /**\r\n   * Opens a page as root page\r\n   *\r\n   * @param {any} page\r\n   * @memberof MyApp\r\n   */\r\n  openPage(page) {\r\n    if (page.component != this.nav.getActive().name) {\r\n      console.log('open page ', page)\r\n\r\n      if (page.title == MENU_TITLE.LOGOUT) {\r\n        this.event.publish(this.config.loginConfig.logoutEventKey);\r\n      }\r\n\r\n      this.nav.setRoot(page.component);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to use selected language.\r\n   *\r\n   * @param {*} language\r\n   * @memberof MyApp\r\n   */\r\n  public useLanguage(language) {\r\n    this.translate.use(language.key);\r\n    this.selectedLanguage = language;\r\n    this.dropdownOpened = false;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { User } from './../user/user';\r\nimport { GlobalUtils } from \"../../../utils/global-utils\";\r\n\r\nexport class MessageModel {\r\n\r\n    /**\r\n     * Id of the grocery list.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public id: string;\r\n    \r\n    /**\r\n     * Name of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * Email of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public email: string;\r\n\r\n    /**\r\n     * Phone number of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public phone: string;\r\n\r\n    /**\r\n     * Subject of the message.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public subject: string;\r\n\r\n    /**\r\n     * Content of the message.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public message: string;\r\n\r\n    public userId: string;\r\n\r\n    constructor(name: string, phone: string, subject: string, message: string, email?: string, userId?: string) {\r\n        this.name = name;\r\n        this.phone = phone;\r\n        this.subject = subject;\r\n        this.message = message;\r\n        if (!GlobalUtils.isUndefinedOrNull(email)){\r\n            this.email = email;\r\n        }\r\n        if (!GlobalUtils.isUndefinedOrNull(userId)) {\r\n            this.userId = userId;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/message/message.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { MessageProvider } from './../providers/message/message.provider';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { MyApp } from './app.component';\r\nimport { ToastProvider } from '../providers/tehnical/toast/toast.provider';\r\nimport { UserProvider } from '../providers/user/user.provider';\r\nimport { StorageProvider, StorageProviderLocal } from '../providers/tehnical/storage/storage.provider';\r\nimport { APP_CONFIG_TOKEN, CONFIG_DEFAULT, prefixLocalstorage, prefixLocalStorageFactory } from './app.config';\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp),\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n        loader: {\r\n            provide: TranslateLoader,\r\n            useFactory: HttpLoaderFactory,\r\n            deps: [HttpClient]\r\n        }\r\n    })\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    ToastProvider,\r\n    // GroceryListProvider,\r\n    UserProvider,\r\n    MessageProvider,\r\n    { provide: StorageProvider, useClass: StorageProviderLocal },\r\n    { provide: APP_CONFIG_TOKEN, useValue: CONFIG_DEFAULT },\r\n    { provide: prefixLocalstorage, useFactory: prefixLocalStorageFactory },\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { InjectionToken } from '@angular/core';\r\n\r\n\r\nexport interface LoginConfig {\r\n  systemKey: string;\r\n  loginDataKey: string;\r\n  loggedInUser: string;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  updatedTokensAvailableEventKey: string;\r\n  loggedInCompleteEventKey: string;\r\n  logoutEventKey: string;\r\n  hasLoggedIn: string;\r\n}\r\n\r\nexport interface StatisticConfig {\r\n\r\n  statisticSaveEvent: string;\r\n  statisticFilterReadyEvent: string;\r\n  statisticMaxResultsNumber: number;\r\n\r\n}\r\n\r\nexport interface AppConfig {\r\n\r\n  loginConfig?: LoginConfig;\r\n\r\n  offlineEventKey?: string;\r\n  onlineEventKey?: string;\r\n\r\n  basePath?: string;\r\n\r\n  basePath2?: string;\r\n\r\n  configChangedEvent?: string;\r\n\r\n  openOrdersStorageKey?: string;\r\n\r\n  statisticConfig?: StatisticConfig;\r\n\r\n  mediaServerBasePath?: string;\r\n\r\n  latestInfoGetTime: string;\r\n\r\n  latestInfoDialogShowEvent: string;\r\n\r\n  latestInfoDialogCloseEvent: string;\r\n\r\n  appName: string;\r\n\r\n  userAlias: string;\r\n\r\n  newRecipeCreated: string;\r\n\r\n  recipeEdited: string;\r\n\r\n  fridgeUrl: string;\r\n\r\n}\r\n\r\nexport const DEFAULT_LOGIN_CONFIG: LoginConfig = {\r\n  systemKey: 'test',\r\n  loginDataKey: 'loginData',\r\n  loggedInUser: 'loggedInUser',\r\n  accessToken: 'accessToken',\r\n  refreshToken: 'refreshToken',\r\n  updatedTokensAvailableEventKey: 'user:loggedIn',\r\n  loggedInCompleteEventKey: 'user:loggedInComplete',\r\n  logoutEventKey: 'system:logout',\r\n  hasLoggedIn: 'hasLoggedIn'\r\n\r\n}\r\n\r\nexport const DEFAULT_STATISTIC_CONFIG: StatisticConfig = {\r\n\r\n  statisticSaveEvent: \"statistic:saved\",\r\n  statisticFilterReadyEvent: \"statistic:filterReady\",\r\n  statisticMaxResultsNumber: 1464,\r\n\r\n}\r\n\r\nexport const CONFIG_DEFAULT: AppConfig = {\r\n\r\n  loginConfig: DEFAULT_LOGIN_CONFIG,\r\n\r\n  offlineEventKey: 'system:offline',\r\n  onlineEventKey: 'system:online',\r\n\r\n  basePath: 'http://ec2-3-14-66-141.us-east-2.compute.amazonaws.com:8080/app',\r\n\r\n  basePath2: 'http://userauthenticationservice-env.viwbvxtbrz.us-east-2.elasticbeanstalk.com',\r\n\r\n  configChangedEvent: 'config:changed',\r\n\r\n  openOrdersStorageKey: \"OpenOrders\",\r\n\r\n  statisticConfig: DEFAULT_STATISTIC_CONFIG,\r\n\r\n  latestInfoGetTime: \"latestInfoGetTime\",\r\n\r\n  latestInfoDialogShowEvent: \"latestInfoDialogShow\",\r\n\r\n  latestInfoDialogCloseEvent: \"latestInfoDialogClose\",\r\n\r\n  appName: \"MyApp\",\r\n\r\n  userAlias: \"userAlias\",\r\n\r\n  newRecipeCreated: \"newRecipeCreated\",\r\n  \r\n  recipeEdited: \"recipeEdited\",\r\n\r\n  fridgeUrl: \"fridgeUrl\"\r\n\r\n}\r\n\r\n/**\r\n * The interface for Configurations\r\n * which can be overwritten by user.\r\n *\r\n * @export\r\n * @interface ConfigKey\r\n */\r\nexport interface ConfigKey {\r\n  storage: string,\r\n  defVal: string,\r\n  primitive?: string\r\n}\r\n/**\r\n * Determines the used configuration.\r\n * Returns the user defined configuration from storage if exists.\r\n * Otherwise the default configuration is returned\r\n *\r\n * @export\r\n * @param {ConfigKey} key\r\n * @returns {*}\r\n */\r\nexport function dynamicConfig(key: ConfigKey, prefix: string): any {\r\n\r\n  console.log(\"Getting config value for key:\", key);\r\n  let result: any;\r\n\r\n  if (localStorage.getItem(prefix + key.storage) == null) {\r\n    result = key.defVal;\r\n  }\r\n  else if (key.primitive == 'number') {\r\n    result = Number(localStorage.getItem(prefix + key.storage));\r\n  }\r\n  else if (key.primitive == 'string') {\r\n    result = localStorage.getItem(prefix + key.storage);\r\n  } else {\r\n    result = JSON.parse(localStorage.getItem(prefix + key.storage));\r\n\r\n  }\r\n\r\n  console.log(\"Value of \", key, \" is \", result);\r\n\r\n  return result;\r\n\r\n}\r\n/**\r\n * Function, which determines the request context using the url of the current site. Ignores basepath only adds all additional paths.\r\n * @returns {string} prefix in the form of e.g. {chefApp-AppPath/SubDirectory/} {chefApp-AppPath/} {chefApp-/}\r\n */\r\nexport function prefixLocalStorageFactory(): string {\r\n  let prefix: string;\r\n  prefix = CONFIG_DEFAULT.appName + \"-\" + window.location.pathname;\r\n  return prefix;\r\n}\r\n\r\nexport const prefixLocalstorage = new InjectionToken<string>('prefixLocalstorage');\r\nexport let APP_CONFIG_TOKEN = new InjectionToken<AppConfig>('app.config');\r\n\r\n\r\nexport const BACKEND_RES_LOGIN: string = 'user/login';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.config.ts","import { Events } from 'ionic-angular';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { AppConfig, APP_CONFIG_TOKEN, prefixLocalstorage } from '../../../app/app.config';\r\n\r\n\r\n/**\r\n * Interface for all available use cases regarding to store the login data.\r\n *\r\n * @export\r\n * @abstract\r\n * @class StorageProvider\r\n */\r\nexport abstract class StorageProvider {\r\n\r\n  /**\r\n   * Saves a key value pair in the local storage\r\n   *\r\n   * @param {string} key\r\n   * @param {string} value\r\n   * @returns {Promise<boolean>}\r\n   *\r\n   * @memberOf StorageImpl\r\n   */\r\n  abstract saveLocal(key: string, value: any): Promise<boolean>;\r\n\r\n  /**\r\n   * Returns the value of a given key\r\n   *\r\n   *\r\n   * @param {string} key key\r\n   * @returns {Promise<any>} value\r\n   *\r\n   * @memberOf StorageImpl\r\n   */\r\n  abstract getLocal(key: string): any;\r\n\r\n  /**\r\n   * Removes the value under key\r\n   *\r\n   *\r\n   * @param {string} key key\r\n   * @returns {Promise<any>} success\r\n   *\r\n   * @memberOf StorageImpl\r\n   */\r\n  abstract deleteLocal(key: string): Promise<any>;\r\n\r\n  abstract saveConfig(key: string, value: any): Promise<any>\r\n\r\n  abstract getConfig(key: string): string;\r\n  abstract clearConfig(key: string): string;\r\n\r\n  abstract getLoggedUser(): any;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Handles the storage in LocalStorage.\r\n *\r\n * @class StorageProviderLocal\r\n * @implements {StorageProvider}\r\n */\r\n@Injectable()\r\nexport class StorageProviderLocal extends StorageProvider {\r\n\r\n  constructor(@Inject(APP_CONFIG_TOKEN) private config: AppConfig, private events: Events, @Inject(prefixLocalstorage) private prefix: string) {\r\n\r\n    super();\r\n\r\n    this.events.subscribe(this.config.loginConfig.logoutEventKey, () => {\r\n      Object.keys(localStorage).forEach((key) => {\r\n        if (key.startsWith(prefix)\r\n          && !key.startsWith(prefix + 'config-')) {\r\n          localStorage.removeItem(key);\r\n        }\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Saves the value at the given key\r\n   *\r\n   *\r\n   * @param {string} key key\r\n   * @param {*} value value\r\n   * @returns {Promise<any>} result\r\n   *\r\n   * @memberOf StorageProviderLocal\r\n   */\r\n  saveLocal(key: string, value: any): Promise<any> {\r\n    localStorage.setItem(this.prefix + key, JSON.stringify(value));\r\n    return Promise.resolve(value);\r\n  }\r\n\r\n  /**\r\n   * Gets the local value identified by the given key\r\n   *\r\n   *\r\n   * @param {string} key key\r\n   * @returns {Promise<any>} result\r\n   *\r\n   * @memberOf StorageProviderLocal\r\n   */\r\n  getLocal(key: string): any {\r\n    return JSON.parse(localStorage.getItem(this.prefix + key));\r\n  }\r\n\r\n  /**\r\n   * Removes the value at the given key\r\n   *\r\n   * @param {string} key key\r\n   * @returns {Promise<any>} result\r\n   *\r\n   * @memberOf StorageProviderLocal\r\n\r\n   */\r\n  deleteLocal(key: string): Promise<any> {\r\n    return Promise.resolve(localStorage.removeItem(this.prefix + key));\r\n  }\r\n\r\n  saveConfig(key: string, value: any): Promise<any> {\r\n    if (typeof value == 'object') {\r\n      this.saveLocal('config-' + key, JSON.stringify(value));\r\n    }\r\n    else {\r\n      this.saveLocal('config-' + key, value);\r\n    }\r\n    return Promise.resolve(value);\r\n  }\r\n\r\n  getConfig(key: string): string {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(this.prefix + 'config-' + key));\r\n    }\r\n    catch (e) {\r\n      return localStorage.getItem(this.prefix + 'config' + key);\r\n    }\r\n  }\r\n\r\n  clearConfig(key: string): string {\r\n    localStorage.removeItem(this.prefix + 'config-' + key);\r\n    return key;\r\n  }\r\n\r\n\r\n  /**\r\n   * Method to get logged user from local storage.\r\n   *\r\n   * @memberof StorageProviderLocal\r\n   */\r\n  getLoggedUser(): any {\r\n    return this.getLocal(this.config.loginConfig.loggedInUser);\r\n  }\r\n}\r\n\r\n/**\r\n * Handles the storage to the SecureStorage.\r\n *\r\n * @class StorageProviderSecure\r\n * @implements {StorageProvider}\r\n//  */\r\n// @Injectable()\r\n// export class StorageProviderSecure extends StorageProvider {\r\n\r\n\r\n//   private currentStorage;\r\n\r\n//   constructor( @Inject(APP_CONFIG_TOKEN) private config: AppConfig, private storage: Storage, private secureStorage: SecureStorage) {\r\n\r\n//     super();\r\n\r\n//   }\r\n\r\n//   private init(): Promise<SecureStorageObject> {\r\n//     if (this.currentStorage == undefined) {\r\n//       return this.secureStorage.create('patientenapp_sec_storage');\r\n//     }\r\n//     else {\r\n//       return Promise.resolve(this.currentStorage);\r\n//     }\r\n//   }\r\n\r\n//   /**\r\n//    * The instance used to store the data.\r\n//    *\r\n//    * @memberOf StorageProviderSecure\r\n//    */\r\n\r\n\r\n//   /**\r\n//    * Saves the given logindata and token to storage.\r\n//    *\r\n//    * @param {LoginData} loginData\r\n//    * @param {string} token\r\n//    * @returns {Promise<boolean>} with value true if login is successfully saved.\r\n//    * In other cases the promise is rejected.\r\n//    *\r\n//    * @memberOf StorageProviderSecure\r\n//    */\r\n//   public saveLogin(loginData: LoginData, token: LoginResponseDTO): Promise<boolean> {\r\n\r\n//     return new Promise((resolve, reject) => {\r\n\r\n//       console.log(\"Save login in secureStorage\");\r\n\r\n\r\n//       this.init()\r\n//         .then((obj) => {\r\n//           console.log('Storage is ready!');\r\n//           return obj;\r\n//         })\r\n//         .then((obj) => {\r\n//           console.log('RefreshToken saved!');\r\n//           return obj.set(this.config.loginDataKey, JSON.stringify(loginData));\r\n//         })\r\n//         .catch(error => { console.error(\"Error during save login in secureStorage\", error); reject(error); })\r\n//     });\r\n\r\n//   }\r\n\r\n//   saveConfig(key: string, value: string): Promise<any> {\r\n//     throw new Error(\"Method not implemented.\");\r\n//   }\r\n//   getConfig(key: string): string {\r\n//     throw new Error(\"Method not implemented.\");\r\n//   }\r\n//   clearConfig(key: string): string {\r\n//     throw new Error(\"Method not implemented.\");\r\n//   }\r\n//   /**\r\n//    * Gets the saved logindata from storage.\r\n//    *\r\n//    * @returns {Promise<LoginData>} resolved if the LoginData could be loaded\r\n//    *\r\n//    * @memberOf StorageProviderSecure\r\n//    */\r\n//   public determineLogin(): Promise<LoginData> {\r\n\r\n//     return new Promise((resolve, reject) => {\r\n\r\n//       this.init().then((obj) => {\r\n\r\n//         obj.get(this.config.loginDataKey)\r\n//           .then((result) => {\r\n//             try {\r\n\r\n//               let storedLoginData: LoginData = JSON.parse(result);\r\n//               resolve(storedLoginData);\r\n\r\n//             } catch (error) {\r\n//               console.error(\"Error loading login data. Cause:\", error);\r\n//               reject(error);\r\n//             }\r\n\r\n//           })\r\n//           .catch((result) => { console.error(result); reject(result); })\r\n//       })\r\n\r\n//     });\r\n//   }\r\n\r\n\r\n//   /**\r\n//      * Gets the saved refresh token from storage.\r\n//      *\r\n//      * @returns {Promise<string>} resolved if the refresh token could be loaded\r\n//      *\r\n//      * @memberOf StorageProviderSecure\r\n//      */\r\n//   determineRefreshToken(): Promise<string> {\r\n//     return new Promise((resolve, reject) => {\r\n//       this.init().then((obj) => {\r\n//         obj.get(this.config.refreshToken)\r\n//           .then((result) => resolve(result))\r\n//           .catch((result) => { console.error(result); reject(result); })\r\n//       });\r\n//     });\r\n//   }\r\n\r\n//   /**\r\n//    * Saves the value at the given key\r\n//    *\r\n//    *\r\n//    * @param {string} key key\r\n//    * @param {*} value value\r\n//    * @returns {Promise<any>} result\r\n//    *\r\n//    * @memberOf StorageProviderLocal\r\n//    */\r\n//   saveLocal(key: string, value: any): Promise<any> {\r\n//     return this.storage.set(key, value);\r\n//   }\r\n\r\n//   /**\r\n//    * Gets the local value identified by the given key\r\n//    *\r\n//    *\r\n//    * @param {string} key key\r\n//    * @returns {Promise<any>} result\r\n//    *\r\n//    * @memberOf StorageProviderLocal\r\n//    */\r\n//   getLocal(key: string): Promise<any> {\r\n//     return this.storage.get(key);\r\n//   }\r\n\r\n//   /**\r\n//    * Removes the value at the given key\r\n//    *\r\n//    * @param {string} key key\r\n//    * @returns {Promise<any>} result\r\n//    *\r\n//    * @memberOf StorageProviderLocal\r\n\r\n//    */\r\n//   deleteLocal(key: string): Promise<any> {\r\n//     return this.storage.remove(key);\r\n//   }\r\n\r\n// }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tehnical/storage/storage.provider.ts"],"sourceRoot":""}