{"version":3,"sources":["../../src/pages/contact/contact.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/model/frontend/common/ButtonModel.ts","../../src/pages/contact/contact.page.ts","../../src/model/backend/message/message.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ContactPage } from './contact.page';\r\nimport { SimpleAppHeaderModule } from '../../components/simple-app-header/simple-app-header.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContactPage\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ContactPage),\r\n    SimpleAppHeaderModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    ContactPage\r\n  ]\r\n})\r\nexport class ContactPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\r\n\r\n/**\r\n * Enum which defines possible header colors.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_COLORS {\r\n    BASE = \"dark\",\r\n}\r\n\r\nexport class HeaderModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    pageTitle: string;\r\n\r\n    /**\r\n     * Navigation bar color.\r\n     * \r\n     * @type {string}\r\n     * @memberof HeaderModel\r\n     */\r\n    navbarColor: string;\r\n\r\n    /**\r\n     * Boolean condition to hide default back button or not to hide.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof HeaderModel\r\n     */\r\n    hideDefaultBackBtn: boolean;\r\n\r\n    /**\r\n     * Left button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    leftButton: ButtonModel;\r\n\r\n    /**\r\n     * Right button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    rightButton: ButtonModel;\r\n\r\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\r\n        this.pageTitle = pageTitle;\r\n        if (navbarColor) {\r\n            this.navbarColor = navbarColor;\r\n        }\r\n        if (hideDefaultBackBtn != undefined) {\r\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\r\n        }\r\n        if (leftButton) {\r\n            this.leftButton = leftButton;\r\n        }\r\n        if (rightButton) {\r\n            this.rightButton = rightButton;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ViewController } from 'ionic-angular';\r\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\r\n\r\n/**\r\n * Header button types.\r\n * \r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_BUTTON_TYPE {\r\n  BACK = <any>\"back\",\r\n  MENU_TOGGLE = <any>\"menuToggle\",\r\n  SAVE = <any>\"save\",\r\n  SEARCH = <any>\"search\",\r\n  CLOSE = <any>\"close\"\r\n}\r\n\r\n/**\r\n * Simple application header component\r\n *\r\n * @export\r\n * @class SimpleAppHeaderComponent\r\n */\r\n@Component({\r\n  selector: \"simple-app-header\",\r\n  templateUrl: \"simple-app-header.component.html\"\r\n})\r\nexport class SimpleAppHeaderComponent {\r\n\r\n  /**\r\n   * Header object model\r\n   * \r\n   * @type {HeaderModel}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Input('header') header: HeaderModel;\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit search input value on change.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit close button click.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Reference to search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @ViewChild(\"searchInput\") searchInput;\r\n\r\n  /**\r\n   * Boolean condition to show search input.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  showSearch: boolean = false;\r\n\r\n  /**\r\n   * Search input\r\n   * \r\n   * @type {string}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  search: string = \"\";\r\n\r\n  public headerButtonType = HEADER_BUTTON_TYPE;\r\n\r\n\r\n  constructor(public viewCtrl: ViewController) {\r\n  }\r\n\r\n  /**\r\n   * Method to handle back button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onBackButtonClick() {\r\n    this.onBackBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle save button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onSaveButtonClick() {\r\n    this.onSaveBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle close button click.\r\n   *\r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onCloseButtonClick() {\r\n    this.onCloseBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Toggle search input to show or hide.\r\n   *\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  public toggleSearch(): void {\r\n    this.showSearch = !this.showSearch;\r\n    if (!this.showSearch) {\r\n      this.clearSearch(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to emit typed value in search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public searchType(): void {\r\n    this.searchChange.emit(this.search);\r\n  }\r\n\r\n  /**\r\n   * Method to clear search and if param is true then focus the input\r\n   *\r\n   * @param {boolean} focus - param to know if input needs to be focused\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public clearSearch(focus: boolean) {\r\n    this.search = \"\";\r\n    this.searchType();\r\n    if (focus) {\r\n      this.searchInput.setFocus();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { IonicModule } from \"ionic-angular\";\r\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SimpleAppHeaderComponent\r\n  ],\r\n  imports: [\r\n    IonicModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    SimpleAppHeaderComponent\r\n  ]\r\n})\r\nexport class SimpleAppHeaderModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","\r\n\r\nexport class ButtonModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * Value of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    value: string;\r\n\r\n    /**\r\n     * Background color of button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    bgColor: string;\r\n\r\n    /**\r\n     * Button is inactive or active.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ButtonModel\r\n     */\r\n    inactive: boolean;\r\n\r\n    /**\r\n     * Custom type of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    type: string;\r\n\r\n    constructor(text: string, value?: string, bgColor?: string, inactive?: boolean, type?: string) {\r\n        this.text = text;\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n        if (bgColor) {\r\n            this.bgColor = bgColor;\r\n        }\r\n        if (inactive != undefined) {\r\n            this.inactive = inactive;\r\n        }\r\n        if (type) {\r\n            this.type = type;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/ButtonModel.ts","import { MENU_TITLE } from './../../app/app.component';\r\nimport { MessageModel } from '../../model/backend/message/message';\r\nimport { Component } from '@angular/core';\r\nimport { NavController, IonicPage, ModalController, AlertController } from 'ionic-angular';\r\nimport { ProductProvider } from '../../providers/product/product.provider';\r\nimport { HeaderModel, HEADER_COLORS } from '../../model/frontend/common/HeaderModel';\r\nimport { ButtonModel } from '../../model/frontend/common/ButtonModel';\r\nimport { HEADER_BUTTON_TYPE } from '../../components/simple-app-header/simple-app-header.component';\r\nimport { ToastProvider } from '../../providers/tehnical/toast/toast.provider';\r\nimport { StorageProvider } from '../../providers/tehnical/storage/storage.provider';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'contact',\r\n  templateUrl: 'contact.page.html'\r\n})\r\nexport class ContactPage {\r\n\r\n  /**\r\n   * Header model\r\n   *\r\n   * @type {HeaderModel}\r\n   * @memberof AFinderPage\r\n   */\r\n  public headerModel: HeaderModel;\r\n\r\n  /**\r\n   * Message model\r\n   *\r\n   * @type {MessageModel}\r\n   * @memberof ContactPage\r\n   */\r\n  public message: MessageModel;\r\n\r\n\r\n  constructor(public navCtrl: NavController, public productProvider: ProductProvider, public modalCtrl: ModalController, private toast: ToastProvider, private alertCtrl: AlertController,\r\n    private storage: StorageProvider) {\r\n    this.headerModel = new HeaderModel(MENU_TITLE.CONTACT, HEADER_COLORS.BASE, true, new ButtonModel(undefined, undefined, undefined, undefined, HEADER_BUTTON_TYPE.MENU_TOGGLE.toString()));\r\n    this.message = new MessageModel(\"\", \"\", \"\", \"\", \"\");\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Method to add product in my fridge.\r\n   *\r\n   * @memberof MyFridgePage\r\n   */\r\n  public sendMessage() {\r\n    // let modal = this.modalCtrl.create('ProductNewPage');\r\n    // modal.present();\r\n    // modal.onDidDismiss(result => {\r\n    //   if (!GlobalUtils.isUndefinedOrNull(result)) {\r\n    //     if (result instanceof MyProduct) {\r\n    //       this.productProvider.addProductInFridge(result).then(newProduct => {\r\n    //         this.myProducts.push(result);\r\n    //         this.toast.showSuccessMessage(\"Product added with success.\");\r\n    //       }).catch(err => {\r\n    //         console.error(\"Failed to add new product in my fridge!\", err);\r\n    //         this.toast.showErrorMessage(\"Add product failed!\");\r\n    //       })\r\n    //     } else {\r\n    //       this.toast.showErrorMessage(\"Add product failed!\");\r\n    //     }\r\n    //   }\r\n    // });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.page.ts","import { GlobalUtils } from \"../../../utils/global-utils\";\r\n\r\nexport class MessageModel {\r\n\r\n    /**\r\n     * Id of the grocery list.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public id: string;\r\n    \r\n    /**\r\n     * Name of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * Email of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public email: string;\r\n\r\n    /**\r\n     * Phone number of the person.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public phone: string;\r\n\r\n    /**\r\n     * Subject of the message.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public subject: string;\r\n\r\n    /**\r\n     * Content of the message.\r\n     *\r\n     * @type {string}\r\n     * @memberof Message\r\n     */\r\n    public message: string;\r\n\r\n    constructor(name: string, phone: string, subject: string, message: string, email?: string) {\r\n        this.name = name;\r\n        this.phone = phone;\r\n        this.subject = subject;\r\n        this.message = message;\r\n        if (!GlobalUtils.isUndefinedOrNull(email)){\r\n            this.email = email;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/message/message.ts"],"sourceRoot":""}