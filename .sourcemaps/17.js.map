{"version":3,"sources":["../../src/pages/recipe/recipe-new/recipe-new.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/pages/recipe/recipe-new/recipe-new.page.ts","../../src/model/backend/recipe/recipe.ts"],"names":[],"mappings":"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","file":"17.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SimpleAppHeaderModule } from '../../../components/simple-app-header/simple-app-header.module';\nimport { RecipeNewPage } from './recipe-new.page';\n\n@NgModule({\n  declarations: [\n    RecipeNewPage\n  ],\n  imports: [\n    IonicPageModule.forChild(RecipeNewPage),\n    SimpleAppHeaderModule\n  ],\n  exports: [\n    RecipeNewPage\n  ]\n})\nexport class RecipeNewPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-new/recipe-new.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\n\n/**\n * Enum which defines possible header colors.\n *\n * @export\n * @enum {number}\n */\nexport enum HEADER_COLORS {\n    BASE = \"dark\",\n}\n\nexport class HeaderModel {\n\n    /**\n     * Text label of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    pageTitle: string;\n\n    /**\n     * Navigation bar color.\n     * \n     * @type {string}\n     * @memberof HeaderModel\n     */\n    navbarColor: string;\n\n    /**\n     * Boolean condition to hide default back button or not to hide.\n     * \n     * @type {boolean}\n     * @memberof HeaderModel\n     */\n    hideDefaultBackBtn: boolean;\n\n    /**\n     * Left button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    leftButton: ButtonModel;\n\n    /**\n     * Right button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    rightButton: ButtonModel;\n\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\n        this.pageTitle = pageTitle;\n        if (navbarColor) {\n            this.navbarColor = navbarColor;\n        }\n        if (hideDefaultBackBtn != undefined) {\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\n        }\n        if (leftButton) {\n            this.leftButton = leftButton;\n        }\n        if (rightButton) {\n            this.rightButton = rightButton;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ViewController } from 'ionic-angular';\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\n\n/**\n * Header button types.\n * \n * @export\n * @enum {number}\n */\nexport enum HEADER_BUTTON_TYPE {\n  BACK = <any>\"back\",\n  MENU_TOGGLE = <any>\"menuToggle\",\n  SAVE = <any>\"save\",\n  SEARCH = <any>\"search\",\n  CLOSE = <any>\"close\"\n}\n\n/**\n * Simple application header component\n *\n * @export\n * @class SimpleAppHeaderComponent\n */\n@Component({\n  selector: \"simple-app-header\",\n  templateUrl: \"simple-app-header.component.html\"\n})\nexport class SimpleAppHeaderComponent {\n\n  /**\n   * Header object model\n   * \n   * @type {HeaderModel}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Input('header') header: HeaderModel;\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit search input value on change.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit close button click.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Reference to search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  @ViewChild(\"searchInput\") searchInput;\n\n  /**\n   * Boolean condition to show search input.\n   *\n   * @type {boolean}\n   * @memberof StatisticMenuPage\n   */\n  showSearch: boolean = false;\n\n  /**\n   * Search input\n   * \n   * @type {string}\n   * @memberof SimpleAppHeaderComponent\n   */\n  search: string = \"\";\n\n  public headerButtonType = HEADER_BUTTON_TYPE;\n\n\n  constructor(public viewCtrl: ViewController) {\n  }\n\n  /**\n   * Method to handle back button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onBackButtonClick() {\n    this.onBackBtnClick.emit();\n  }\n\n  /**\n   * Method to handle save button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onSaveButtonClick() {\n    this.onSaveBtnClick.emit();\n  }\n\n  /**\n   * Method to handle close button click.\n   *\n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onCloseButtonClick() {\n    this.onCloseBtnClick.emit();\n  }\n\n  /**\n   * Toggle search input to show or hide.\n   *\n   * @memberof StatisticMenuPage\n   */\n  public toggleSearch(): void {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch(false);\n    }\n  }\n\n  /**\n   * Method to emit typed value in search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  public searchType(): void {\n    this.searchChange.emit(this.search);\n  }\n\n  /**\n   * Method to clear search and if param is true then focus the input\n   *\n   * @param {boolean} focus - param to know if input needs to be focused\n   * @memberof SimpleAppHeaderComponent\n   */\n  public clearSearch(focus: boolean) {\n    this.search = \"\";\n    this.searchType();\n    if (focus) {\n      this.searchInput.setFocus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { NgModule } from \"@angular/core\";\nimport { IonicModule } from \"ionic-angular\";\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\n\n@NgModule({\n  declarations: [\n    SimpleAppHeaderComponent\n  ],\n  imports: [\n    IonicModule\n  ],\n  exports: [\n    SimpleAppHeaderComponent\n  ]\n})\nexport class SimpleAppHeaderModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","import { Component, Inject } from '@angular/core';\nimport { IonicPage, ViewController, ModalController, Events, NavController, NavParams } from 'ionic-angular';\nimport { HeaderModel, HEADER_COLORS } from '../../../model/frontend/common/HeaderModel';\nimport { ToastProvider } from '../../../providers/tehnical/toast/toast.provider';\nimport { GlobalUtils } from '../../../utils/global-utils';\nimport { StorageProvider } from '../../../providers/tehnical/storage/storage.provider';\nimport { Recipe } from '../../../model/backend/recipe/recipe';\nimport { ProductProvider } from '../../../providers/product/product.provider';\nimport { MyProduct } from '../../../model/backend/product/my-product';\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../../app/app.config';\nimport { RecipeProduct } from '../../../model/frontend/product/recipe-product';\n\n@IonicPage()\n@Component({\n  selector: 'recipe-new',\n  templateUrl: 'recipe-new.page.html'\n})\nexport class RecipeNewPage {\n\n  /**\n   * Header model\n   *\n   * @type {HeaderModel}\n   * @memberof RecipeNewPage\n   */\n  public headerModel: HeaderModel;\n\n  /**\n   * New recipe object.\n   *\n   * @type {Recipe}\n   * @memberof RecipeNewPage\n   */\n  public recipe: Recipe;\n\n  /**\n   * Label of the ingredients\n   *\n   * @type {string}\n   * @memberof RecipeNewPage\n   */\n  // public ingredientsLabel: string = \"\";\n\n\n  constructor(private toast: ToastProvider, public viewCtrl: ViewController, private navCtrl: NavController, private storage: StorageProvider,\n    public productProvider: ProductProvider, private modalCtrl: ModalController, private event: Events, @Inject(APP_CONFIG_TOKEN) private config: AppConfig,\n    private navParams: NavParams) {\n    if (GlobalUtils.isUndefinedOrNull(navParams.get(\"recipe\"))) {\n      this.headerModel = new HeaderModel(\"New recipe\", HEADER_COLORS.BASE);\n      this.recipe = new Recipe(undefined,\"\", [], \"\", [], this.storage.getLoggedUser());\n    } else {\n      this.headerModel = new HeaderModel(\"Edit recipe\", HEADER_COLORS.BASE);\n      this.recipe = navParams.get(\"recipe\");\n      // this.setIngredientsLabel();\n    }\n  }\n\n  /**\n   * Method to dismiss modal.\n   *\n   * @memberof GroceryNewPage\n   */\n  public dismissModal() {\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * Method to load ingredients select popup.\n   *\n   * @memberof RecipeNewPage\n   */\n  public loadIngredientsSelect() {\n    let modal = this.modalCtrl.create('RecipeProductPage', { \"products\": this.recipe.products });\n    modal.present();\n    modal.onDidDismiss((result: RecipeProduct[]) => {\n      if (!GlobalUtils.isUndefinedOrNull(result)) {\n        if (result.length > 0) {\n          this.recipe.products = [];\n          result.forEach(product => {\n            //TODO - correct his\n            // if (product.checked) {\n              this.recipe.products.push(product.myProduct);\n            // }\n            //  else {\n            //   this.recipe.products = this.recipe.products.filter(obj => obj.product.name != product.myProduct.product.name);\n            // }\n          })\n          // this.setIngredientsLabel();\n        }\n      }\n    });\n  }\n\n  /**\n   * Create new recipe.\n   *\n   * @memberof RecipeNewPage\n   */\n  public editRecipe() {\n    if (GlobalUtils.isEmpty(this.recipe.name)) {\n      this.toast.showErrorMessage(\"Recipe title cannot be empty!\")\n    } else if (this.recipe.products.length == 0) {\n      this.toast.showErrorMessage(\"Recipe needs to have ingredients!\")\n    } else {\n      if (GlobalUtils.isUndefinedOrNull(this.recipe.id)) {\n        this.event.publish(this.config.newRecipeCreated, this.recipe);\n      } else {\n        this.event.publish(this.config.recipeEdited, this.recipe);\n      }\n      this.navCtrl.pop();\n    }\n  }\n\n  // /**\n  //  * Method to set ingredients label.\n  //  *\n  //  * @memberof RecipeNewPage\n  //  */\n  // public setIngredientsLabel() {\n  //   this.ingredientsLabel = \"\";\n  //   for (let i = 0; i < this.recipe.products.length; i++) {\n  //     this.ingredientsLabel += this.recipe.products[i].product.name;\n  //     if (i != this.recipe.products.length - 1) {\n  //       this.ingredientsLabel += \",\";\n  //     }\n  //   }\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-new/recipe-new.page.ts","import { RecipeNote } from \"./recipe-note\";\nimport { GlobalUtils } from \"../../../utils/global-utils\";\nimport { MyProduct } from \"../product/my-product\";\nimport { User } from \"../user/user\";\n\n/**\n * Recipe class\n *\n * @export\n * @class Recipe\n */\nexport class Recipe {\n\n    /**\n     * Id of the recipe.\n     *\n     * @type {number}\n     * @memberof Recipe\n     */\n    public id: number;\n\n    /**\n     * Name of the recipe.\n     *\n     * @type {string}\n     * @memberof Recipe\n     */\n    public name: string;\n\n    // /**\n    //  * Key of the recipe.\n    //  *\n    //  * @type {number}\n    //  * @memberof Recipe\n    //  */\n    // public key: string;\n\n    /**\n * Description of the recipe\n *\n * @type {string}\n * @memberof Recipe\n */\n    public description: string;\n\n    /**\n     * Id of the user to whom belong the recipe.\n     *\n     * @type {User}\n     * @memberof Recipe\n     */\n    public user: User;\n\n\n    /**\n     * Products needed in the recipe.\n     *\n     * @type {Product[]}\n     * @memberof Recipe\n     */\n    public products: MyProduct[];\n\n\n\n    /**\n     * Recipe notes.\n     *\n     * @type {RecipeNote}\n     * @memberof Recipe\n     */\n    public notes: RecipeNote[];\n\n\n    constructor(id: number, name: string, products: MyProduct[], description: string, notes: RecipeNote[], user: User) {\n        this.id = id;\n        this.name = name;\n        // this.key = key;\n        this.products = products;\n        this.description = description;\n        this.notes = GlobalUtils.isArrayNotNull(notes);\n        this.user = user;\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/recipe/recipe.ts"],"sourceRoot":""}