{"version":3,"sources":["../../src/pages/recipe/recipe-list/recipe-list.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/model/frontend/common/ButtonModel.ts","../../src/pages/recipe/recipe-list/recipe-list.page.ts"],"names":[],"mappings":"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","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RecipeListPage } from './recipe-list.page';\r\nimport { SimpleAppHeaderModule } from '../../../components/simple-app-header/simple-app-header.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecipeListPage\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RecipeListPage),\r\n    SimpleAppHeaderModule\r\n  ],\r\n  exports: [\r\n    RecipeListPage\r\n  ]\r\n})\r\nexport class RecipeListPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-list/recipe-list.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\r\n\r\n/**\r\n * Enum which defines possible header colors.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_COLORS {\r\n    BASE = \"dark\",\r\n}\r\n\r\nexport class HeaderModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    pageTitle: string;\r\n\r\n    /**\r\n     * Navigation bar color.\r\n     * \r\n     * @type {string}\r\n     * @memberof HeaderModel\r\n     */\r\n    navbarColor: string;\r\n\r\n    /**\r\n     * Boolean condition to hide default back button or not to hide.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof HeaderModel\r\n     */\r\n    hideDefaultBackBtn: boolean;\r\n\r\n    /**\r\n     * Left button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    leftButton: ButtonModel;\r\n\r\n    /**\r\n     * Right button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    rightButton: ButtonModel;\r\n\r\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\r\n        this.pageTitle = pageTitle;\r\n        if (navbarColor) {\r\n            this.navbarColor = navbarColor;\r\n        }\r\n        if (hideDefaultBackBtn != undefined) {\r\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\r\n        }\r\n        if (leftButton) {\r\n            this.leftButton = leftButton;\r\n        }\r\n        if (rightButton) {\r\n            this.rightButton = rightButton;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ViewController } from 'ionic-angular';\r\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\r\n\r\n/**\r\n * Header button types.\r\n * \r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_BUTTON_TYPE {\r\n  BACK = <any>\"back\",\r\n  MENU_TOGGLE = <any>\"menuToggle\",\r\n  SAVE = <any>\"save\",\r\n  SEARCH = <any>\"search\",\r\n  CLOSE = <any>\"close\"\r\n}\r\n\r\n/**\r\n * Simple application header component\r\n *\r\n * @export\r\n * @class SimpleAppHeaderComponent\r\n */\r\n@Component({\r\n  selector: \"simple-app-header\",\r\n  templateUrl: \"simple-app-header.component.html\"\r\n})\r\nexport class SimpleAppHeaderComponent {\r\n\r\n  /**\r\n   * Header object model\r\n   * \r\n   * @type {HeaderModel}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Input('header') header: HeaderModel;\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit search input value on change.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit close button click.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Reference to search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @ViewChild(\"searchInput\") searchInput;\r\n\r\n  /**\r\n   * Boolean condition to show search input.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  showSearch: boolean = false;\r\n\r\n  /**\r\n   * Search input\r\n   * \r\n   * @type {string}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  search: string = \"\";\r\n\r\n  public headerButtonType = HEADER_BUTTON_TYPE;\r\n\r\n\r\n  constructor(public viewCtrl: ViewController) {\r\n  }\r\n\r\n  /**\r\n   * Method to handle back button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onBackButtonClick() {\r\n    this.onBackBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle save button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onSaveButtonClick() {\r\n    this.onSaveBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle close button click.\r\n   *\r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onCloseButtonClick() {\r\n    this.onCloseBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Toggle search input to show or hide.\r\n   *\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  public toggleSearch(): void {\r\n    this.showSearch = !this.showSearch;\r\n    if (!this.showSearch) {\r\n      this.clearSearch(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to emit typed value in search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public searchType(): void {\r\n    this.searchChange.emit(this.search);\r\n  }\r\n\r\n  /**\r\n   * Method to clear search and if param is true then focus the input\r\n   *\r\n   * @param {boolean} focus - param to know if input needs to be focused\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public clearSearch(focus: boolean) {\r\n    this.search = \"\";\r\n    this.searchType();\r\n    if (focus) {\r\n      this.searchInput.setFocus();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { IonicModule } from \"ionic-angular\";\r\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SimpleAppHeaderComponent\r\n  ],\r\n  imports: [\r\n    IonicModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    SimpleAppHeaderComponent\r\n  ]\r\n})\r\nexport class SimpleAppHeaderModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","\r\n\r\nexport class ButtonModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * Value of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    value: string;\r\n\r\n    /**\r\n     * Background color of button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    bgColor: string;\r\n\r\n    /**\r\n     * Button is inactive or active.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ButtonModel\r\n     */\r\n    inactive: boolean;\r\n\r\n    /**\r\n     * Custom type of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    type: string;\r\n\r\n    constructor(text: string, value?: string, bgColor?: string, inactive?: boolean, type?: string) {\r\n        this.text = text;\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n        if (bgColor) {\r\n            this.bgColor = bgColor;\r\n        }\r\n        if (inactive != undefined) {\r\n            this.inactive = inactive;\r\n        }\r\n        if (type) {\r\n            this.type = type;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/ButtonModel.ts","import { Component, Inject } from '@angular/core';\r\nimport { NavController, IonicPage, ModalController, Events } from 'ionic-angular';\r\nimport { HeaderModel, HEADER_COLORS } from '../../../model/frontend/common/HeaderModel';\r\nimport { ButtonModel } from '../../../model/frontend/common/ButtonModel';\r\nimport { HEADER_BUTTON_TYPE } from '../../../components/simple-app-header/simple-app-header.component';\r\nimport { Recipe } from '../../../model/backend/recipe/recipe';\r\nimport { RecipeProvider } from '../../../providers/recipe/recipe.provider';\r\nimport { ToastProvider } from '../../../providers/tehnical/toast/toast.provider';\r\nimport { GlobalUtils } from '../../../utils/global-utils';\r\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../../app/app.config';\r\nimport { StorageProvider } from '../../../providers/tehnical/storage/storage.provider';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'recipe-list',\r\n  templateUrl: 'recipe-list.page.html'\r\n})\r\nexport class RecipeListPage {\r\n\r\n  /**\r\n   * Header model\r\n   *\r\n   * @type {HeaderModel}\r\n   * @memberof RecipeListPage\r\n   */\r\n  public headerModel: HeaderModel;\r\n\r\n  /**\r\n   * Recipe list.\r\n   *\r\n   * @type {Recipe[]}\r\n   * @memberof RecipeListPage\r\n   */\r\n  public recipeList: Recipe[];\r\n\r\n\r\n  constructor(public navCtrl: NavController, public recipeProvider: RecipeProvider, private toast: ToastProvider, private modalCtrl: ModalController,\r\n    private event: Events, @Inject(APP_CONFIG_TOKEN) private config: AppConfig, private storage: StorageProvider) {\r\n    this.headerModel = new HeaderModel(\"Recipe List\", HEADER_COLORS.BASE, true, new ButtonModel(undefined, undefined, undefined, undefined, HEADER_BUTTON_TYPE.MENU_TOGGLE.toString()));\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    this.recipeProvider.getRecipeList(this.storage.getLoggedUser()).then((recipeList) => {\r\n      this.recipeList = recipeList;\r\n    }).catch(error => {\r\n      console.error(\"Error while geting recipe list from backend!\");\r\n      this.toast.showErrorMessage(\"Error while geting recipe list from backend!\");\r\n    });\r\n    this.event.subscribe(this.config.newRecipeCreated, this.addNewRecipe);\r\n    this.event.subscribe(this.config.recipeEdited, this.editRecipeInList);\r\n  }\r\n\r\n  /**\r\n   * On destroy unsubscribe\r\n   *\r\n   * @memberof RecipeListPage\r\n   */\r\n  ngOnDestroy() {\r\n    this.event.unsubscribe(this.config.newRecipeCreated, this.addNewRecipe);\r\n    this.event.unsubscribe(this.config.recipeEdited, this.editRecipeInList);\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new recipe to recipe list.\r\n   *\r\n   * @memberof RecipeListPage\r\n   */\r\n  public addNewRecipe = (recipe: Recipe) => {\r\n    this.recipeProvider.createRecipe(recipe).then(newRecipe => {\r\n      this.recipeList.push(newRecipe);\r\n      this.toast.showSuccessMessage(\"Recipe list was created.\", undefined, false);\r\n    }).catch(error => {\r\n      console.log(\"Error while creating recipe!\");\r\n      this.toast.showErrorMessage(\"Failed to create recipe.\", undefined, false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Edit recipe in the recipe list.\r\n   *\r\n   * @memberof RecipeListPage\r\n   */\r\n  public editRecipeInList = (recipe) => {\r\n    this.recipeProvider.updateRecipe(recipe).then(updatedRecipe => {\r\n      this.recipeList.filter(result => result.id == recipe.id)[0] = recipe;\r\n      this.toast.showSuccessMessage(\"Recipe list was edited.\", undefined, false);\r\n    }).catch(error => {\r\n      console.log(\"Error while editing recipe!\");\r\n      this.toast.showErrorMessage(\"Failed to edit recipe.\", undefined, false);\r\n    });\r\n  }\r\n\r\n  public removeRecipe(event: any, recipe: Recipe) {\r\n    event.stopPropagation();\r\n    this.recipeProvider.deleteRecipe(recipe).then(result => {\r\n      if (result) {\r\n        this.recipeList = this.recipeList.filter(obj => obj.id != recipe.id);\r\n      } else {\r\n        this.toast.showSuccessMessage(\"Failed to delete recipe.\", undefined, false);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"Error while deleting recipe!\");\r\n      this.toast.showErrorMessage(\"Failed to delete recipe.\", undefined, false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to open recipe details.\r\n   *\r\n   * @memberof RecipeListPage\r\n   */\r\n  public openRecipeDetails(recipe: Recipe) {\r\n    this.navCtrl.push(\"RecipeDetailPage\", { \"recipe\": recipe });\r\n  }\r\n\r\n  /**\r\n   * Method to navigate to edit recipe page.\r\n   *\r\n   * @param {Recipe} recipe\r\n   * @memberof RecipeListPage\r\n   */\r\n  public editRecipe(event: any, recipe: Recipe) {\r\n    event.stopPropagation();\r\n    this.navCtrl.push(\"RecipeNewPage\", { \"recipe\": recipe });\r\n  }\r\n\r\n  /**\r\n   * Method to navigate to new recipe page.\r\n   *\r\n   * @memberof RecipeListPage\r\n   */\r\n  public goToNewRecipePage() {\r\n    this.navCtrl.push(\"RecipeNewPage\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recipe/recipe-list/recipe-list.page.ts"],"sourceRoot":""}