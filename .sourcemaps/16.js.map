{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/model/backend/user/user.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\nimport { SimpleAppHeaderModule } from '../../components/simple-app-header/simple-app-header.module';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n    SimpleAppHeaderModule\n  ],\n  exports: [\n    RegisterPage\n  ]\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { ButtonModel } from \"./ButtonModel\";\n\n/**\n * Enum which defines possible header colors.\n *\n * @export\n * @enum {number}\n */\nexport enum HEADER_COLORS {\n    BASE = \"dark\",\n}\n\nexport class HeaderModel {\n\n    /**\n     * Text label of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    pageTitle: string;\n\n    /**\n     * Navigation bar color.\n     * \n     * @type {string}\n     * @memberof HeaderModel\n     */\n    navbarColor: string;\n\n    /**\n     * Boolean condition to hide default back button or not to hide.\n     * \n     * @type {boolean}\n     * @memberof HeaderModel\n     */\n    hideDefaultBackBtn: boolean;\n\n    /**\n     * Left button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    leftButton: ButtonModel;\n\n    /**\n     * Right button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    rightButton: ButtonModel;\n\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\n        this.pageTitle = pageTitle;\n        if (navbarColor) {\n            this.navbarColor = navbarColor;\n        }\n        if (hideDefaultBackBtn != undefined) {\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\n        }\n        if (leftButton) {\n            this.leftButton = leftButton;\n        }\n        if (rightButton) {\n            this.rightButton = rightButton;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ViewController } from 'ionic-angular';\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\n\n/**\n * Header button types.\n * \n * @export\n * @enum {number}\n */\nexport enum HEADER_BUTTON_TYPE {\n  BACK = <any>\"back\",\n  MENU_TOGGLE = <any>\"menuToggle\",\n  SAVE = <any>\"save\",\n  SEARCH = <any>\"search\",\n  CLOSE = <any>\"close\"\n}\n\n/**\n * Simple application header component\n *\n * @export\n * @class SimpleAppHeaderComponent\n */\n@Component({\n  selector: \"simple-app-header\",\n  templateUrl: \"simple-app-header.component.html\"\n})\nexport class SimpleAppHeaderComponent {\n\n  /**\n   * Header object model\n   * \n   * @type {HeaderModel}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Input('header') header: HeaderModel;\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit search input value on change.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit close button click.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Reference to search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  @ViewChild(\"searchInput\") searchInput;\n\n  /**\n   * Boolean condition to show search input.\n   *\n   * @type {boolean}\n   * @memberof StatisticMenuPage\n   */\n  showSearch: boolean = false;\n\n  /**\n   * Search input\n   * \n   * @type {string}\n   * @memberof SimpleAppHeaderComponent\n   */\n  search: string = \"\";\n\n  public headerButtonType = HEADER_BUTTON_TYPE;\n\n\n  constructor(public viewCtrl: ViewController) {\n  }\n\n  /**\n   * Method to handle back button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onBackButtonClick() {\n    this.onBackBtnClick.emit();\n  }\n\n  /**\n   * Method to handle save button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onSaveButtonClick() {\n    this.onSaveBtnClick.emit();\n  }\n\n  /**\n   * Method to handle close button click.\n   *\n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onCloseButtonClick() {\n    this.onCloseBtnClick.emit();\n  }\n\n  /**\n   * Toggle search input to show or hide.\n   *\n   * @memberof StatisticMenuPage\n   */\n  public toggleSearch(): void {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch(false);\n    }\n  }\n\n  /**\n   * Method to emit typed value in search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  public searchType(): void {\n    this.searchChange.emit(this.search);\n  }\n\n  /**\n   * Method to clear search and if param is true then focus the input\n   *\n   * @param {boolean} focus - param to know if input needs to be focused\n   * @memberof SimpleAppHeaderComponent\n   */\n  public clearSearch(focus: boolean) {\n    this.search = \"\";\n    this.searchType();\n    if (focus) {\n      this.searchInput.setFocus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { NgModule } from \"@angular/core\";\nimport { IonicModule } from \"ionic-angular\";\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\n\n@NgModule({\n  declarations: [\n    SimpleAppHeaderComponent\n  ],\n  imports: [\n    IonicModule\n  ],\n  exports: [\n    SimpleAppHeaderComponent\n  ]\n})\nexport class SimpleAppHeaderModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","import { GlobalUtils } from \"../../../utils/global-utils\";\n\nexport class User {\n\n    /**\n     * Id of the user.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public id: string;\n\n    /**\n     * User name.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public username: string;\n\n    /**\n     * Password of the user.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public password: string;\n\n    /**\n     * Flag to know if user is admin.\n     *\n     * @type {boolean}\n     * @memberof User\n     */\n    public admin: boolean;\n\n    constructor(username: string, password: string, admin: boolean) {\n        this.username = username;\n        this.password = password;\n        this.admin = admin;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/user/user.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { User } from '../../model/backend/user/user';\nimport { HeaderModel, HEADER_COLORS } from '../../model/frontend/common/HeaderModel';\nimport { ToastProvider } from '../../providers/tehnical/toast/toast.provider';\nimport { GlobalUtils } from '../../utils/global-utils';\n\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n\n  /**\n   * User for register.\n   *\n   * @type {MyProduct[]}\n   * @memberof RegisterPage\n   */\n  user: User;\n\n  /**\n   * Confirm password field.\n   *\n   * @type {string}\n   * @memberof RegisterPage\n   */\n  confirmPassword: string;\n\n  /**\n   * Header model\n   *\n   * @type {HeaderModel}\n   * @memberof RegisterPage\n   */\n  public headerModel: HeaderModel;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,  private toast: ToastProvider) {\n    this.headerModel = new HeaderModel(\"Register page\", HEADER_COLORS.BASE);\n    this.user = new User(\"\", \"\",false);\n  }\n\n  /**\n   * Registers a new user\n   *\n   * @param {User} user\n   * @memberof RegisterPage\n   */\n  public async register() {\n    if (this.validate()) {\n      // try {\n      //   const result = await this.afauth.auth.createUserWithEmailAndPassword(this.user.username, this.user.password);\n      //   console.log(result);\n      //   this.toast.showSuccessMessage(\"You have registered successfully!\", undefined, false);\n      //   this.navCtrl.popTo(\"LoginPage\");\n      // } catch (e) {\n      //   this.toast.showErrorMessage(\"Could not register\");\n      //   console.error(\"Error in register\", e);\n      // }\n    }\n  }\n\n  /**\n   * Method to validate register\n   *\n   * @returns {boolean}\n   * @memberof RegisterPage\n   */\n  public validate(): boolean {\n    let valid: boolean = false;\n\n    if (GlobalUtils.isEmpty(this.user.username)) {\n      this.toast.showErrorMessage(\"Email cannot be empty!\");\n    } else if (this.user.username.indexOf(\"@\") == -1) {\n      this.toast.showErrorMessage(\"Not well formed email!\");\n    } else if (GlobalUtils.isEmpty(this.user.password)) {\n      this.toast.showErrorMessage(\"Password cannot be empty!\");\n    } else if (this.confirmPassword != this.user.password) {\n      this.toast.showErrorMessage(\"Password and confirm password is not the same!\");\n    } else {\n      valid = true;\n    }\n\n    return valid;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}