{"version":3,"sources":["../../src/pages/register/register.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/pages/register/register.page.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RegisterPage } from './register.page';\r\nimport { SimpleAppHeaderModule } from '../../components/simple-app-header/simple-app-header.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RegisterPage),\r\n    SimpleAppHeaderModule\r\n  ],\r\n  exports: [\r\n    RegisterPage\r\n  ]\r\n})\r\nexport class RegisterPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\r\n\r\n/**\r\n * Enum which defines possible header colors.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_COLORS {\r\n    BASE = \"dark\",\r\n}\r\n\r\nexport class HeaderModel {\r\n\r\n    /**\r\n     * Text label of the button.\r\n     * \r\n     * @type {string}\r\n     * @memberof ButtonModel\r\n     */\r\n    pageTitle: string;\r\n\r\n    /**\r\n     * Navigation bar color.\r\n     * \r\n     * @type {string}\r\n     * @memberof HeaderModel\r\n     */\r\n    navbarColor: string;\r\n\r\n    /**\r\n     * Boolean condition to hide default back button or not to hide.\r\n     * \r\n     * @type {boolean}\r\n     * @memberof HeaderModel\r\n     */\r\n    hideDefaultBackBtn: boolean;\r\n\r\n    /**\r\n     * Left button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    leftButton: ButtonModel;\r\n\r\n    /**\r\n     * Right button in header.\r\n     * \r\n     * @type {ButtonModel}\r\n     * @memberof HeaderModel\r\n     */\r\n    rightButton: ButtonModel;\r\n\r\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\r\n        this.pageTitle = pageTitle;\r\n        if (navbarColor) {\r\n            this.navbarColor = navbarColor;\r\n        }\r\n        if (hideDefaultBackBtn != undefined) {\r\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\r\n        }\r\n        if (leftButton) {\r\n            this.leftButton = leftButton;\r\n        }\r\n        if (rightButton) {\r\n            this.rightButton = rightButton;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ViewController } from 'ionic-angular';\r\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\r\n\r\n/**\r\n * Header button types.\r\n * \r\n * @export\r\n * @enum {number}\r\n */\r\nexport enum HEADER_BUTTON_TYPE {\r\n  BACK = <any>\"back\",\r\n  MENU_TOGGLE = <any>\"menuToggle\",\r\n  SAVE = <any>\"save\",\r\n  SEARCH = <any>\"search\",\r\n  CLOSE = <any>\"close\"\r\n}\r\n\r\n/**\r\n * Simple application header component\r\n *\r\n * @export\r\n * @class SimpleAppHeaderComponent\r\n */\r\n@Component({\r\n  selector: \"simple-app-header\",\r\n  templateUrl: \"simple-app-header.component.html\"\r\n})\r\nexport class SimpleAppHeaderComponent {\r\n\r\n  /**\r\n   * Header object model\r\n   * \r\n   * @type {HeaderModel}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Input('header') header: HeaderModel;\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to know in statistic which tab was clicked.\r\n   * \r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit search input value on change.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Output parameter to emit close button click.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Reference to search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  @ViewChild(\"searchInput\") searchInput;\r\n\r\n  /**\r\n   * Boolean condition to show search input.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  showSearch: boolean = false;\r\n\r\n  /**\r\n   * Search input\r\n   * \r\n   * @type {string}\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  search: string = \"\";\r\n\r\n  public headerButtonType = HEADER_BUTTON_TYPE;\r\n\r\n\r\n  constructor(public viewCtrl: ViewController) {\r\n  }\r\n\r\n  /**\r\n   * Method to handle back button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onBackButtonClick() {\r\n    this.onBackBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle save button click.\r\n   * \r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onSaveButtonClick() {\r\n    this.onSaveBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Method to handle close button click.\r\n   *\r\n   * @private\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  private onCloseButtonClick() {\r\n    this.onCloseBtnClick.emit();\r\n  }\r\n\r\n  /**\r\n   * Toggle search input to show or hide.\r\n   *\r\n   * @memberof StatisticMenuPage\r\n   */\r\n  public toggleSearch(): void {\r\n    this.showSearch = !this.showSearch;\r\n    if (!this.showSearch) {\r\n      this.clearSearch(false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to emit typed value in search input.\r\n   *\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public searchType(): void {\r\n    this.searchChange.emit(this.search);\r\n  }\r\n\r\n  /**\r\n   * Method to clear search and if param is true then focus the input\r\n   *\r\n   * @param {boolean} focus - param to know if input needs to be focused\r\n   * @memberof SimpleAppHeaderComponent\r\n   */\r\n  public clearSearch(focus: boolean) {\r\n    this.search = \"\";\r\n    this.searchType();\r\n    if (focus) {\r\n      this.searchInput.setFocus();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { TranslateModule } from '@ngx-translate/core';\r\nimport { NgModule } from \"@angular/core\";\r\nimport { IonicModule } from \"ionic-angular\";\r\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SimpleAppHeaderComponent\r\n  ],\r\n  imports: [\r\n    IonicModule,\r\n    TranslateModule\r\n  ],\r\n  exports: [\r\n    SimpleAppHeaderComponent\r\n  ]\r\n})\r\nexport class SimpleAppHeaderModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { User } from '../../model/backend/user/user';\r\nimport { HeaderModel, HEADER_COLORS } from '../../model/frontend/common/HeaderModel';\r\nimport { ToastProvider } from '../../providers/tehnical/toast/toast.provider';\r\nimport { GlobalUtils } from '../../utils/global-utils';\r\nimport { UserProvider } from '../../providers/user/user.provider';\r\n\r\n/**\r\n * Generated class for the RegisterPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-register',\r\n  templateUrl: 'register.page.html',\r\n})\r\nexport class RegisterPage {\r\n\r\n  /**\r\n   * User for register.\r\n   *\r\n   * @type {MyProduct[]}\r\n   * @memberof RegisterPage\r\n   */\r\n  user: User;\r\n\r\n  /**\r\n   * Confirm password field.\r\n   *\r\n   * @type {string}\r\n   * @memberof RegisterPage\r\n   */\r\n  confirmPassword: string;\r\n\r\n  /**\r\n   * Header model\r\n   *\r\n   * @type {HeaderModel}\r\n   * @memberof RegisterPage\r\n   */\r\n  public headerModel: HeaderModel;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,  private toast: ToastProvider,\r\n    private userProvider: UserProvider) {\r\n    this.headerModel = new HeaderModel(\"Register page\", HEADER_COLORS.BASE);\r\n    this.user = new User(\"\", \"\", \"\");\r\n  }\r\n\r\n  /**\r\n   * Registers a new user\r\n   *\r\n   * @param {User} user\r\n   * @memberof RegisterPage\r\n   */\r\n  public async register() {\r\n    if (this.validate()) {\r\n      try {\r\n        this.userProvider.register(this.user.name, this.user.username, this.user.password);\r\n        this.toast.showSuccessMessage(\"You have registered successfully!\", undefined, false);\r\n        this.navCtrl.popTo(\"LoginPage\");\r\n      } catch (e) {\r\n        this.toast.showErrorMessage(\"Could not register!\");\r\n        console.error(\"Error in register\", e);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to validate register\r\n   *\r\n   * @returns {boolean}\r\n   * @memberof RegisterPage\r\n   */\r\n  public validate(): boolean {\r\n    let valid: boolean = false;\r\n\r\n    if (GlobalUtils.isEmpty(this.user.name)) {\r\n      this.toast.showErrorMessage(\"Name cannot be empty!\");\r\n    } else if (GlobalUtils.isEmpty(this.user.username)) {\r\n      this.toast.showErrorMessage(\"Username cannot be empty!\");\r\n    } else if (GlobalUtils.isEmpty(this.user.password)) {\r\n      this.toast.showErrorMessage(\"Password cannot be empty!\");\r\n    } else if (this.confirmPassword != this.user.password) {\r\n      this.toast.showErrorMessage(\"Password and confirm password is not the same!\");\r\n    } else {\r\n      valid = true;\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.page.ts"],"sourceRoot":""}