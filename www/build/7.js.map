{"version":3,"sources":["../../src/pages/login/login.page.module.ts","../../src/model/frontend/common/HeaderModel.ts","../../src/components/simple-app-header/simple-app-header.component.ts","../../src/components/simple-app-header/simple-app-header.module.ts","../../src/model/frontend/common/ButtonModel.ts","../../src/model/backend/user/user.ts","../../src/pages/login/login.page.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SimpleAppHeaderModule } from '../../components/simple-app-header/simple-app-header.module';\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  declarations: [\n    LoginPage\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    SimpleAppHeaderModule\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.page.module.ts","import { ButtonModel } from \"./ButtonModel\";\n\n/**\n * Enum which defines possible header colors.\n *\n * @export\n * @enum {number}\n */\nexport enum HEADER_COLORS {\n    BASE = \"dark\",\n}\n\nexport class HeaderModel {\n\n    /**\n     * Text label of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    pageTitle: string;\n\n    /**\n     * Navigation bar color.\n     * \n     * @type {string}\n     * @memberof HeaderModel\n     */\n    navbarColor: string;\n\n    /**\n     * Boolean condition to hide default back button or not to hide.\n     * \n     * @type {boolean}\n     * @memberof HeaderModel\n     */\n    hideDefaultBackBtn: boolean;\n\n    /**\n     * Left button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    leftButton: ButtonModel;\n\n    /**\n     * Right button in header.\n     * \n     * @type {ButtonModel}\n     * @memberof HeaderModel\n     */\n    rightButton: ButtonModel;\n\n    constructor(pageTitle: string, navbarColor?: string, hideDefaultBackBtn?: boolean, leftButton?: ButtonModel, rightButton?: ButtonModel) {\n        this.pageTitle = pageTitle;\n        if (navbarColor) {\n            this.navbarColor = navbarColor;\n        }\n        if (hideDefaultBackBtn != undefined) {\n            this.hideDefaultBackBtn = hideDefaultBackBtn;\n        }\n        if (leftButton) {\n            this.leftButton = leftButton;\n        }\n        if (rightButton) {\n            this.rightButton = rightButton;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/HeaderModel.ts","import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { ViewController } from 'ionic-angular';\nimport { HeaderModel } from '../../model/frontend/common/HeaderModel';\n\n/**\n * Header button types.\n * \n * @export\n * @enum {number}\n */\nexport enum HEADER_BUTTON_TYPE {\n  BACK = <any>\"back\",\n  MENU_TOGGLE = <any>\"menuToggle\",\n  SAVE = <any>\"save\",\n  SEARCH = <any>\"search\",\n  CLOSE = <any>\"close\"\n}\n\n/**\n * Simple application header component\n *\n * @export\n * @class SimpleAppHeaderComponent\n */\n@Component({\n  selector: \"simple-app-header\",\n  templateUrl: \"simple-app-header.component.html\"\n})\nexport class SimpleAppHeaderComponent {\n\n  /**\n   * Header object model\n   * \n   * @type {HeaderModel}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Input('header') header: HeaderModel;\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onBackBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to know in statistic which tab was clicked.\n   * \n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onSaveBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit search input value on change.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Output parameter to emit close button click.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof SimpleAppHeaderComponent\n   */\n  @Output() onCloseBtnClick: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Reference to search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  @ViewChild(\"searchInput\") searchInput;\n\n  /**\n   * Boolean condition to show search input.\n   *\n   * @type {boolean}\n   * @memberof StatisticMenuPage\n   */\n  showSearch: boolean = false;\n\n  /**\n   * Search input\n   * \n   * @type {string}\n   * @memberof SimpleAppHeaderComponent\n   */\n  search: string = \"\";\n\n  public headerButtonType = HEADER_BUTTON_TYPE;\n\n\n  constructor(public viewCtrl: ViewController) {\n  }\n\n  /**\n   * Method to handle back button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onBackButtonClick() {\n    this.onBackBtnClick.emit();\n  }\n\n  /**\n   * Method to handle save button click.\n   * \n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onSaveButtonClick() {\n    this.onSaveBtnClick.emit();\n  }\n\n  /**\n   * Method to handle close button click.\n   *\n   * @private\n   * @memberof SimpleAppHeaderComponent\n   */\n  private onCloseButtonClick() {\n    this.onCloseBtnClick.emit();\n  }\n\n  /**\n   * Toggle search input to show or hide.\n   *\n   * @memberof StatisticMenuPage\n   */\n  public toggleSearch(): void {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch(false);\n    }\n  }\n\n  /**\n   * Method to emit typed value in search input.\n   *\n   * @memberof SimpleAppHeaderComponent\n   */\n  public searchType(): void {\n    this.searchChange.emit(this.search);\n  }\n\n  /**\n   * Method to clear search and if param is true then focus the input\n   *\n   * @param {boolean} focus - param to know if input needs to be focused\n   * @memberof SimpleAppHeaderComponent\n   */\n  public clearSearch(focus: boolean) {\n    this.search = \"\";\n    this.searchType();\n    if (focus) {\n      this.searchInput.setFocus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.component.ts","import { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from \"@angular/core\";\nimport { IonicModule } from \"ionic-angular\";\nimport { SimpleAppHeaderComponent } from \"./simple-app-header.component\";\n\n@NgModule({\n  declarations: [\n    SimpleAppHeaderComponent\n  ],\n  imports: [\n    IonicModule,\n    TranslateModule\n  ],\n  exports: [\n    SimpleAppHeaderComponent\n  ]\n})\nexport class SimpleAppHeaderModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/simple-app-header/simple-app-header.module.ts","\n\nexport class ButtonModel {\n\n    /**\n     * Text label of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    text: string;\n\n    /**\n     * Value of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    value: string;\n\n    /**\n     * Background color of button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    bgColor: string;\n\n    /**\n     * Button is inactive or active.\n     * \n     * @type {boolean}\n     * @memberof ButtonModel\n     */\n    inactive: boolean;\n\n    /**\n     * Custom type of the button.\n     * \n     * @type {string}\n     * @memberof ButtonModel\n     */\n    type: string;\n\n    constructor(text: string, value?: string, bgColor?: string, inactive?: boolean, type?: string) {\n        this.text = text;\n        if (value) {\n            this.value = value;\n        }\n        if (bgColor) {\n            this.bgColor = bgColor;\n        }\n        if (inactive != undefined) {\n            this.inactive = inactive;\n        }\n        if (type) {\n            this.type = type;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/frontend/common/ButtonModel.ts","import { GlobalUtils } from \"../../../utils/global-utils\";\n\nexport class User {\n\n    /**\n     * Id of the user.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public id: string;\n\n    /**\n     * User name.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public username: string;\n\n    /**\n     * Password of the user.\n     *\n     * @type {string}\n     * @memberof User\n     */\n    public password: string;\n\n    /**\n     * Flag to know if user is admin.\n     *\n     * @type {boolean}\n     * @memberof User\n     */\n    public admin: boolean;\n\n    constructor(username: string, password: string, admin: boolean) {\n        this.username = username;\n        this.password = password;\n        this.admin = admin;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/model/backend/user/user.ts","import { Component, Inject } from '@angular/core';\nimport { NavController, IonicPage, Events } from 'ionic-angular';\nimport { User } from '../../model/backend/user/user';\nimport { HeaderModel, HEADER_COLORS } from '../../model/frontend/common/HeaderModel';\nimport { ButtonModel } from '../../model/frontend/common/ButtonModel';\nimport { HEADER_BUTTON_TYPE } from '../../components/simple-app-header/simple-app-header.component';\nimport { ToastProvider } from '../../providers/tehnical/toast/toast.provider';\nimport { UserProvider } from '../../providers/user/user.provider';\nimport { StorageProvider } from '../../providers/tehnical/storage/storage.provider';\nimport { AppConfig, APP_CONFIG_TOKEN } from '../../app/app.config';\n\n@IonicPage()\n@Component({\n  selector: 'login',\n  templateUrl: 'login.page.html'\n})\nexport class LoginPage {\n\n  /**\n   * User for login.\n   *\n   * @type {MyProduct[]}\n   * @memberof LoginPage\n   */\n  user: User;\n\n  /**\n   * Header model\n   *\n   * @type {HeaderModel}\n   * @memberof LoginPage\n   */\n  public headerModel: HeaderModel;\n\n  public customMsg: string;\n\n\n  constructor(public navCtrl: NavController, private toast: ToastProvider, private userProvider: UserProvider,\n    private event: Events, private storage: StorageProvider, @Inject(APP_CONFIG_TOKEN) private config: AppConfig) {\n    this.headerModel = new HeaderModel(\"Login page\", HEADER_COLORS.BASE, true, new ButtonModel(undefined, undefined, undefined, undefined, HEADER_BUTTON_TYPE.MENU_TOGGLE.toString()));\n    this.user = new User(\"\", \"\", false);\n  }\n\n  ionViewDidLoad() {\n    //TODO - implement autologin\n    this.userProvider.getFromBackend2().then(result => {\n      this.customMsg = result;\n    }).catch(error => {\n      console.error(error);\n    })\n  }\n\n  /**\n   * Performs a login\n   *\n   * @returns {Promise<LoginResponseDTO>}\n   * @memberof LoginPage\n   */\n  public login() {\n    return this.userProvider.login(this.user.username, this.user.password)\n      .then(response => {\n        this.navCtrl.setRoot(\"HomePage\");\n        return response;\n      },\n        error => {\n          console.log(\"Error on login: \" + error);\n          if (error.status === 401) {\n            this.toast.showErrorMessage(\"Login data is not valid!\");\n          } else {\n            this.toast.showErrorMessage(\"Unkown error on login!\");\n          }\n          return error;\n        })\n  }\n\n  /**\n   * Load register page.\n   *\n   * @memberof LoginPage\n   */\n  public register() {\n    this.navCtrl.push(\"RegisterPage\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.page.ts"],"sourceRoot":""}